import{_ as o,c as a,o as n,ag as t}from"./chunks/framework.DPDPlp3K.js";const q=JSON.parse('{"title":"Standard Version","description":"","frontmatter":{},"headers":[],"relativePath":"style/styleTools/版本号管理工具standard-version.md","filePath":"style/styleTools/版本号管理工具standard-version.md"}'),l={name:"style/styleTools/版本号管理工具standard-version.md"};function p(e,s,r,c,y,u){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="standard-version" tabindex="-1">Standard Version <a class="header-anchor" href="#standard-version" aria-label="Permalink to &quot;Standard Version&quot;">​</a></h1><p>Standard Version 是一个用来管理版本号和发布流程的工具，它可以根据提交信息自动更新版本号、生成更新日志（changelog）、创建标签（tag）、推送代码等。</p><p>Standard Version 遵循语义化版本（Semantic Versioning）的原则，即使用三位数字表示版本号（major.minor.patch），并根据提交信息的类型来决定版本号的增加方式。使用 Standard Version 可以让我们的版本号更加有意义、可追踪、可预测，并且可以简化我们的发布流程。</p><h2 id="基本配置与使用" tabindex="-1">基本配置与使用 <a class="header-anchor" href="#基本配置与使用" aria-label="Permalink to &quot;基本配置与使用&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#032F62;"> add</span><span style="color:#032F62;"> standard-version</span><span style="color:#005CC5;"> -D</span></span></code></pre></div><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>在package.json中添加script脚本</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#005CC5;">  &quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#005CC5;">    &quot;release&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;standard-version&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>默认情况下，standard-version 只会在 CHANGELOG.md 中记录 feat 和 fix 类型的提交。如果想记录其他类型的提交，需要如下步骤：</p><p>在项目的根目录下创建一个名为 .versionrc 的文件，并粘贴复制以下内容：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#032F62;">  &quot;header&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;# 更新记录 </span><span style="color:#005CC5;">\\n\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">  &quot;types&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;feat&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;✨ Features | 新功能&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;fix&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;🐛 Bug Fixes | Bug 修复&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;init&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;🎉 Init | 初始化&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;docs&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;📝 Documentation | 文档&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;style&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;💄 Styles | 风格&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;hidden&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;refactor&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;♻️ Code Refactoring | 代码重构&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;perf&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;⚡ Performance Improvements | 性能优化&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;✅ Tests | 测试&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;revert&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;⏪ Revert | 回退&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;hidden&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;📦‍ Build System | 打包构建&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;chore&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;🚀 Chore | 部署相关&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;ci&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;section&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;👷 Continuous Integration | CI/CD 配置&quot;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2>`,13)]))}const d=o(l,[["render",p]]);export{q as __pageData,d as default};
