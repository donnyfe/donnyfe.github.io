import{_ as a,c as n,o as l,ag as p}from"./chunks/framework.DPDPlp3K.js";const D=JSON.parse('{"title":"日期相关技术","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/date/日期相关技术.md","filePath":"jsPractice/date/日期相关技术.md"}'),o={name:"jsPractice/date/日期相关技术.md"};function e(t,s,c,r,y,i){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="日期相关技术" tabindex="-1">日期相关技术 <a class="header-anchor" href="#日期相关技术" aria-label="Permalink to &quot;日期相关技术&quot;">​</a></h1><h2 id="格式化时间" tabindex="-1">格式化时间 <a class="header-anchor" href="#格式化时间" aria-label="Permalink to &quot;格式化时间&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 格式化时间</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {String|Number}</span><span style="color:#24292E;"> dateTime</span><span style="color:#6A737D;"> 需要格式化的时间戳</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {String}</span><span style="color:#24292E;"> fmt</span><span style="color:#6A737D;"> 格式化规则 yyyy:mm:dd|yyyy:mm|yyyy年mm月dd日|yyyy年mm月dd日 hh时MM分等,可自定义组合 默认yyyy-mm-dd</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span><span style="color:#6F42C1;"> {string}</span><span style="color:#6A737D;"> 返回格式化后的字符串</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;"> function</span><span style="color:#6F42C1;"> timeFormat</span><span style="color:#24292E;">(</span><span style="color:#E36209;">dateTime</span><span style="color:#D73A49;"> =</span><span style="color:#005CC5;"> null</span><span style="color:#24292E;">, </span><span style="color:#E36209;">formatStr</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;yyyy-mm-dd&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  let</span><span style="color:#24292E;"> date</span></span>
<span class="line"><span style="color:#6A737D;"> // 若传入时间为假值，则取当前时间</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">dateTime) {</span></span>
<span class="line"><span style="color:#24292E;">    date </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // 若为unix秒时间戳，则转为毫秒时间戳（逻辑有点奇怪，但不敢改，以保证历史兼容）</span></span>
<span class="line"><span style="color:#D73A49;">  else</span><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{10}$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(dateTime?.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">trim</span><span style="color:#24292E;">())) {</span></span>
<span class="line"><span style="color:#24292E;">    date </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">(dateTime </span><span style="color:#D73A49;">*</span><span style="color:#005CC5;"> 1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // 若用户传入字符串格式时间戳，new Date无法解析，需做兼容</span></span>
<span class="line"><span style="color:#D73A49;">  else</span><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> dateTime </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;string&#39;</span><span style="color:#D73A49;"> &amp;&amp;</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">+$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(dateTime.</span><span style="color:#6F42C1;">trim</span><span style="color:#24292E;">())) {</span></span>
<span class="line"><span style="color:#24292E;">    date </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Number</span><span style="color:#24292E;">(dateTime))</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#6A737D;">  // 其他都认为符合 RFC 2822 规范</span></span>
<span class="line"><span style="color:#D73A49;">  else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // 处理平台性差异，在Safari/Webkit中，new Date仅支持/作为分割符的字符串时间</span></span>
<span class="line"><span style="color:#24292E;">    date </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#D73A49;">      typeof</span><span style="color:#24292E;"> dateTime </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;string&#39;</span></span>
<span class="line"><span style="color:#D73A49;">        ?</span><span style="color:#24292E;"> dateTime.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/-/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">        :</span><span style="color:#24292E;"> dateTime</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> timeSource</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#032F62;">  &#39;y&#39;</span><span style="color:#24292E;">: date.</span><span style="color:#6F42C1;">getFullYear</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(), </span><span style="color:#6A737D;">// 年</span></span>
<span class="line"><span style="color:#032F62;">  &#39;m&#39;</span><span style="color:#24292E;">: (date.</span><span style="color:#6F42C1;">getMonth</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 月</span></span>
<span class="line"><span style="color:#032F62;">  &#39;d&#39;</span><span style="color:#24292E;">: date.</span><span style="color:#6F42C1;">getDate</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 日</span></span>
<span class="line"><span style="color:#032F62;">  &#39;h&#39;</span><span style="color:#24292E;">: date.</span><span style="color:#6F42C1;">getHours</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 时</span></span>
<span class="line"><span style="color:#032F62;">  &#39;M&#39;</span><span style="color:#24292E;">: date.</span><span style="color:#6F42C1;">getMinutes</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 分</span></span>
<span class="line"><span style="color:#032F62;">  &#39;s&#39;</span><span style="color:#24292E;">: date.</span><span style="color:#6F42C1;">getSeconds</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 秒</span></span>
<span class="line"><span style="color:#6A737D;">  // 有其他格式化字符需求可以继续添加，必须转化成字符串</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> key</span><span style="color:#D73A49;"> in</span><span style="color:#24292E;"> timeSource) {</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">ret</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> RegExp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">key</span><span style="color:#032F62;">}+\`</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(formatStr) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (ret) {</span></span>
<span class="line"><span style="color:#6A737D;">      // 年可能只需展示两位</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#005CC5;"> beginIndex</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;y&#39;</span><span style="color:#D73A49;"> &amp;&amp;</span><span style="color:#24292E;"> ret.</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> ===</span><span style="color:#005CC5;"> 2</span><span style="color:#D73A49;"> ?</span><span style="color:#005CC5;"> 2</span><span style="color:#D73A49;"> :</span><span style="color:#005CC5;"> 0</span></span>
<span class="line"><span style="color:#24292E;">      formatStr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> formatStr.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(ret, timeSource[key].</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(beginIndex))</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> formatStr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="时间戳转为多久之前" tabindex="-1">时间戳转为多久之前 <a class="header-anchor" href="#时间戳转为多久之前" aria-label="Permalink to &quot;时间戳转为多久之前&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 时间戳转为多久之前</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {String|Number}</span><span style="color:#24292E;"> timestamp</span><span style="color:#6A737D;"> 时间戳</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {String|Boolean}</span><span style="color:#24292E;"> format</span><span style="color:#6A737D;"> </span></span>
<span class="line"><span style="color:#6A737D;"> * 格式化规则如果为时间格式字符串，超出一定时间范围，返回固定的时间格式；</span></span>
<span class="line"><span style="color:#6A737D;"> * 如果为布尔值false，无论什么时间，都返回多久以前的格式</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span><span style="color:#6F42C1;"> {string}</span><span style="color:#6A737D;"> 转化后的内容</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> timeFrom</span><span style="color:#24292E;">(</span><span style="color:#E36209;">timestamp</span><span style="color:#D73A49;"> =</span><span style="color:#005CC5;"> null</span><span style="color:#24292E;">, </span><span style="color:#E36209;">format</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;yyyy-mm-dd&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (timestamp </span><span style="color:#D73A49;">==</span><span style="color:#005CC5;"> null</span><span style="color:#24292E;">) timestamp </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> Number</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;"> timestamp </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> parseInt</span><span style="color:#24292E;">(timestamp)</span></span>
<span class="line"><span style="color:#6A737D;"> // 判断用户输入的时间戳是秒还是毫秒,一般前端js获取的时间戳是毫秒(13位),后端传过来的为秒(10位)</span></span>
<span class="line"><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (timestamp.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> ==</span><span style="color:#005CC5;"> 10</span><span style="color:#24292E;">) timestamp </span><span style="color:#D73A49;">*=</span><span style="color:#005CC5;"> 1000</span></span>
<span class="line"><span style="color:#D73A49;"> let</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> timestamp</span></span>
<span class="line"><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> parseInt</span><span style="color:#24292E;">(timer </span><span style="color:#D73A49;">/</span><span style="color:#005CC5;"> 1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"> // 如果小于5分钟,则返回&quot;刚刚&quot;,其他以此类推</span></span>
<span class="line"><span style="color:#D73A49;"> let</span><span style="color:#24292E;"> tips </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#D73A49;"> switch</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  case</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 300</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">   tips </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;刚刚&#39;</span></span>
<span class="line"><span style="color:#D73A49;">   break</span></span>
<span class="line"><span style="color:#D73A49;">  case</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&gt;=</span><span style="color:#005CC5;"> 300</span><span style="color:#D73A49;"> &amp;&amp;</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 3600</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">   tips </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> \`\${</span><span style="color:#6F42C1;">parseInt</span><span style="color:#032F62;">(</span><span style="color:#24292E;">timer</span><span style="color:#D73A49;"> /</span><span style="color:#005CC5;"> 60</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}分钟前\`</span></span>
<span class="line"><span style="color:#D73A49;">   break</span></span>
<span class="line"><span style="color:#D73A49;">  case</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&gt;=</span><span style="color:#005CC5;"> 3600</span><span style="color:#D73A49;"> &amp;&amp;</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 86400</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">   tips </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> \`\${</span><span style="color:#6F42C1;">parseInt</span><span style="color:#032F62;">(</span><span style="color:#24292E;">timer</span><span style="color:#D73A49;"> /</span><span style="color:#005CC5;"> 3600</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}小时前\`</span></span>
<span class="line"><span style="color:#D73A49;">   break</span></span>
<span class="line"><span style="color:#D73A49;">  case</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&gt;=</span><span style="color:#005CC5;"> 86400</span><span style="color:#D73A49;"> &amp;&amp;</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 2592000</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">   tips </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> \`\${</span><span style="color:#6F42C1;">parseInt</span><span style="color:#032F62;">(</span><span style="color:#24292E;">timer</span><span style="color:#D73A49;"> /</span><span style="color:#005CC5;"> 86400</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}天前\`</span></span>
<span class="line"><span style="color:#D73A49;">   break</span></span>
<span class="line"><span style="color:#D73A49;">  default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6A737D;">   // 如果format为false，则无论什么时间戳，都显示xx之前</span></span>
<span class="line"><span style="color:#D73A49;">   if</span><span style="color:#24292E;"> (format </span><span style="color:#D73A49;">===</span><span style="color:#005CC5;"> false</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (timer </span><span style="color:#D73A49;">&gt;=</span><span style="color:#005CC5;"> 2592000</span><span style="color:#D73A49;"> &amp;&amp;</span><span style="color:#24292E;"> timer </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 365</span><span style="color:#D73A49;"> *</span><span style="color:#005CC5;"> 86400</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">     tips </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> \`\${</span><span style="color:#6F42C1;">parseInt</span><span style="color:#032F62;">(</span><span style="color:#24292E;">timer</span><span style="color:#D73A49;"> /</span><span style="color:#032F62;"> (</span><span style="color:#005CC5;">86400</span><span style="color:#D73A49;"> *</span><span style="color:#005CC5;"> 30</span><span style="color:#032F62;">))</span><span style="color:#032F62;">}个月前\`</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">     tips </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> \`\${</span><span style="color:#6F42C1;">parseInt</span><span style="color:#032F62;">(</span><span style="color:#24292E;">timer</span><span style="color:#D73A49;"> /</span><span style="color:#032F62;"> (</span><span style="color:#005CC5;">86400</span><span style="color:#D73A49;"> *</span><span style="color:#005CC5;"> 365</span><span style="color:#032F62;">))</span><span style="color:#032F62;">}年前\`</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">   } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    tips </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> timeFormat</span><span style="color:#24292E;">(timestamp, format)</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;"> return</span><span style="color:#24292E;"> tips</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="查询某天是否为工作日" tabindex="-1">查询某天是否为工作日 <a class="header-anchor" href="#查询某天是否为工作日" aria-label="Permalink to &quot;查询某天是否为工作日&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> isWeekday</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">date</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> date.</span><span style="color:#6F42C1;">getDay</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">%</span><span style="color:#005CC5;"> 6</span><span style="color:#D73A49;"> !==</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">isWeekday</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2022</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">03</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">))</span></span></code></pre></div><h2 id="两日期之间相差的天数" tabindex="-1">两日期之间相差的天数 <a class="header-anchor" href="#两日期之间相差的天数" aria-label="Permalink to &quot;两日期之间相差的天数&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> dayDiff</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">date1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">date2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(date1.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> date2.</span><span style="color:#6F42C1;">getTime</span><span style="color:#24292E;">()) </span><span style="color:#D73A49;">/</span><span style="color:#005CC5;"> 86400000</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">dayDiff</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;2021-10-21&quot;</span><span style="color:#24292E;">), </span><span style="color:#D73A49;">new</span><span style="color:#6F42C1;"> Date</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;2022-02-12&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#6A737D;">// Result: 114</span></span></code></pre></div>`,9)]))}const A=a(o,[["render",e]]);export{D as __pageData,A as default};
