import{_ as a,c as l,o as n,ag as p}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"MySQL 的 SQL 基础","description":"","frontmatter":{},"headers":[],"relativePath":"mysql/MySQL的SQL基础.md","filePath":"mysql/MySQL的SQL基础.md"}'),o={name:"mysql/MySQL的SQL基础.md"};function e(t,s,c,i,r,y){return n(),l("div",null,s[0]||(s[0]=[p(`<h1 id="mysql-的-sql-基础" tabindex="-1">MySQL 的 SQL 基础 <a class="header-anchor" href="#mysql-的-sql-基础" aria-label="Permalink to &quot;MySQL 的 SQL 基础&quot;">​</a></h1><h2 id="sql-介绍" tabindex="-1">SQL 介绍 <a class="header-anchor" href="#sql-介绍" aria-label="Permalink to &quot;SQL 介绍&quot;">​</a></h2><ul><li>结构化查询语言</li><li>5.7 以后符合 SQL92 严格模式</li><li>通过 sql_mode 参数来控制</li></ul><h2 id="sql-类型" tabindex="-1">SQL 类型 <a class="header-anchor" href="#sql-类型" aria-label="Permalink to &quot;SQL 类型&quot;">​</a></h2><h3 id="mysql-客户端功能" tabindex="-1">mysql 客户端功能 <a class="header-anchor" href="#mysql-客户端功能" aria-label="Permalink to &quot;mysql 客户端功能&quot;">​</a></h3><p>MySQL 客户端功能自带的功能，通过 help 命令查看</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">help</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="服务端功能" tabindex="-1">服务端功能 <a class="header-anchor" href="#服务端功能" aria-label="Permalink to &quot;服务端功能&quot;">​</a></h3><p>MySQL 服务端功能，通过 help contents 命令查看</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">help</span><span style="color:#032F62;"> contents</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看具体分类</span></span>
<span class="line"><span style="color:#6F42C1;">help</span><span style="color:#032F62;"> Data</span><span style="color:#032F62;"> Types</span></span></code></pre></div><p><strong>常用分类：</strong></p><ul><li>DDL：数据定义语言 Data Definition</li><li>DCL：数据控制语言 Data Control</li><li>DML：数据操作语言 Data Manipulation</li><li>DQL：数据查询语言 Data Query</li></ul><p><strong>全部分类：</strong></p><ul><li>Account Management</li><li>Administration</li><li>Components</li><li>Compound Statements</li><li>Contents</li><li>Data Definition</li><li>Data Manipulation</li><li>Data Types</li><li>Functions</li><li>Geographic Features</li><li>Help Metadata</li><li>Language Structure</li><li>Plugins</li><li>Storage Engines</li><li>Table Maintenance</li><li>Transactions</li><li>User-Defined Functions</li><li>Utility</li></ul><h2 id="sql-概念" tabindex="-1">SQL 概念 <a class="header-anchor" href="#sql-概念" aria-label="Permalink to &quot;SQL 概念&quot;">​</a></h2><h3 id="sql-mode-sql-模式" tabindex="-1">sql_mode SQL 模式 <a class="header-anchor" href="#sql-mode-sql-模式" aria-label="Permalink to &quot;sql_mode SQL 模式&quot;">​</a></h3><p>作用：规范 SQL 语句书写方式</p><p>查看 sql_mode 模式</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> @@sql_mode;</span></span></code></pre></div><p><strong>Sql_mode 类型：</strong></p><ul><li>ONLY_FULL_GROUP_BY,</li><li>STRICT_TRANS_TABLES,</li><li>NO_ZERO_IN_DATE,</li><li>NO_ZERO_DATE,</li><li>ERROR_FOR_DIVISION_BY_ZERO,</li><li>NO_ENGINE_SUBSTITUTION</li></ul><h3 id="字符集-charset-及校对规则-collation" tabindex="-1">字符集(charset)及校对规则(collation) <a class="header-anchor" href="#字符集-charset-及校对规则-collation" aria-label="Permalink to &quot;字符集(charset)及校对规则(collation)&quot;">​</a></h3><h4 id="字符集" tabindex="-1">字符集 <a class="header-anchor" href="#字符集" aria-label="Permalink to &quot;字符集&quot;">​</a></h4><p>查看字符集</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> charset</span><span style="color:#24292E;">;</span></span></code></pre></div><p>字符集：</p><ul><li>utf8：单个字符最多 3 个字节</li><li>utf8mb4： <ul><li>单个字符最多 4 个字节</li><li>支持的编码比 utf8 更多（比如 emoji 字符，1 个字符占 4 个字节）</li></ul></li></ul><p>示例</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 创建数据库</span></span>
<span class="line"><span style="color:#6F42C1;">create</span><span style="color:#032F62;"> database</span><span style="color:#032F62;"> learn</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建数据库指定字符集</span></span>
<span class="line"><span style="color:#6F42C1;">create</span><span style="color:#032F62;"> database</span><span style="color:#032F62;"> learn</span><span style="color:#032F62;"> charset</span><span style="color:#032F62;"> utf8mb4</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 显示数据库</span></span>
<span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> create</span><span style="color:#032F62;"> database</span><span style="color:#032F62;"> learn</span><span style="color:#24292E;">;</span></span></code></pre></div><h4 id="校对规则" tabindex="-1">校对规则 <a class="header-anchor" href="#校对规则" aria-label="Permalink to &quot;校对规则&quot;">​</a></h4><p>也叫排序规则，作用：影响到排序的操作</p><p>a b</p><p>A</p><p>ab</p><p>Ba</p><p>查看校对规则</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> collation</span><span style="color:#24292E;">;</span></span></code></pre></div><p>查看字符 ASCII 码</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> ASCII(&#39;a&#39;);</span></span></code></pre></div><h3 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h3><h4 id="数字类型-整数、小数" tabindex="-1">数字类型：整数、小数 <a class="header-anchor" href="#数字类型-整数、小数" aria-label="Permalink to &quot;数字类型：整数、小数&quot;">​</a></h4><p><strong>tinyint：</strong></p><p>1B = 8bit = 二进制范围 00000000~11111111 十进制范围 0~255，-128~127</p><p><strong>int：</strong></p><p>4B = 32bit =二进制 32 位 1， 十进制 0~2^32-1, -2^31~2^31-1</p><p><strong>bigint：</strong></p><p>8B = 十进制 0~2^64-1, -2^63~2^63-1</p><p>示例：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">use</span><span style="color:#032F62;"> database_name</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建数据表</span></span>
<span class="line"><span style="color:#6F42C1;">create</span><span style="color:#032F62;"> table</span><span style="color:#032F62;"> t1</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">id</span><span style="color:#032F62;"> int,</span><span style="color:#032F62;"> name</span><span style="color:#032F62;"> varchar</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">64</span><span style="color:#24292E;">)</span><span style="color:#032F62;">,</span><span style="color:#032F62;"> age</span><span style="color:#032F62;"> tinyint</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看指定数据表</span></span>
<span class="line"><span style="color:#6F42C1;">desc</span><span style="color:#032F62;"> t1</span><span style="color:#24292E;">;</span></span></code></pre></div><h4 id="字符串类型" tabindex="-1">字符串类型 <a class="header-anchor" href="#字符串类型" aria-label="Permalink to &quot;字符串类型&quot;">​</a></h4><p>1、char：</p><ul><li>定长字符串类型，最大 255 字符</li><li>不会判断，立即分配空间</li></ul><p>例子：</p><p>char： abcde</p><ul><li>申请空间</li><li>存字符</li><li>申请 1 个字节存储长度数字</li></ul><p>2、Varchar：</p><ul><li>变长字符串类型，最大 65535 字符</li><li>在存储数据时，会先判读字符长度，然后（申请空间）合理分配存储空间</li><li>除了存储字符串之外，还会额外使用 1-2 字节存储字符长度</li></ul><p>例子：</p><p>Varchar： abcde</p><ul><li>判断字符长度</li><li>申请空间</li><li>存字符</li><li>申请 1 个字节存储长度数字</li></ul><p>例如：</p><p>Char(10)：最多存 10 个字符串，如果不够会自动用空格填充剩余空间，对于磁盘空间都会占用 10 个字符长度</p><p>Varchar(10)：最多存 10 个字符，按需分配存储空间</p><p>注意：以上数据类型选择需考虑周全，会影响到索引应用</p><p>3、应用场景</p><ul><li>字符串长度固定，使用 char</li><li>字符串长度不固定，使用 varchar</li></ul><p>4、括号中的数字</p><ul><li>设置的是字符的个数，无关字符类型</li><li>英文、数字，每个字符占 1 个字节长度</li><li>对于中文，需要考虑字符集</li><li>Utf8、utf8mb4，每个中文占 3 个字节长度</li><li>总长度不能超过数据类型的最大长度。</li></ul><p>查询某个字符占用字节长度</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> length(n1) from t1;</span></span></code></pre></div><h4 id="枚举类型" tabindex="-1">枚举类型 <a class="header-anchor" href="#枚举类型" aria-label="Permalink to &quot;枚举类型&quot;">​</a></h4><ul><li>Enum：枚举类型</li></ul><h4 id="时间类型" tabindex="-1">时间类型 <a class="header-anchor" href="#时间类型" aria-label="Permalink to &quot;时间类型&quot;">​</a></h4><ul><li>DATE：日期</li><li>TIME：时间</li><li>DATETIME：日期时间（8 字节占用空间）</li><li>TIMESTAMP：时间戳（4 字节占用空间）</li><li>YEAR：年</li></ul><h4 id="二进制类型" tabindex="-1">二进制类型 <a class="header-anchor" href="#二进制类型" aria-label="Permalink to &quot;二进制类型&quot;">​</a></h4><p>音视频，一般不存 MYSQL 数据库</p><h4 id="json-类型" tabindex="-1">JSON 类型 <a class="header-anchor" href="#json-类型" aria-label="Permalink to &quot;JSON 类型&quot;">​</a></h4><ul><li>JSON：JSON 类型</li></ul><h3 id="约束" tabindex="-1">约束 <a class="header-anchor" href="#约束" aria-label="Permalink to &quot;约束&quot;">​</a></h3><ul><li>Primary Key：主键约束，作用：唯一，非空，每张表只能有一个主键，作为聚簇索引。</li><li>Not Null：非空约束，作用：必填，建议每个列都设置非空。</li><li>Unique Key：唯一约束，作用：必须不重复的值</li><li>Unsigned：非负数字</li></ul><h3 id="其它属性" tabindex="-1">其它属性 <a class="header-anchor" href="#其它属性" aria-label="Permalink to &quot;其它属性&quot;">​</a></h3><ul><li>Default：默认值</li><li>comment：注释</li></ul><h2 id="sql-应用" tabindex="-1">SQL 应用 <a class="header-anchor" href="#sql-应用" aria-label="Permalink to &quot;SQL 应用&quot;">​</a></h2><h3 id="client" tabindex="-1">client <a class="header-anchor" href="#client" aria-label="Permalink to &quot;client&quot;">​</a></h3><ul><li><code>\\?</code>：查看帮助</li><li><code>\\c</code>：结束上一条命令运行</li><li><code>\\G</code>：格式化输出（纵行显示）</li><li><code>\\q</code>：退出会话</li><li><code>source</code>： 导入 SQL 脚本，类似于&lt;，数据备份常用</li><li><code>system</code>：调用 linux 命令</li></ul><h3 id="server" tabindex="-1">server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;server&quot;">​</a></h3><h4 id="ddl-数据库定义语言" tabindex="-1">DDL 数据库定义语言 <a class="header-anchor" href="#ddl-数据库定义语言" aria-label="Permalink to &quot;DDL 数据库定义语言&quot;">​</a></h4><p><strong>（1）库定义：库名、库属性</strong></p><p><a href="http://sqlstyle.guide/zh/" target="_blank" rel="noreferrer">规范</a>：</p><ol><li>库名：小写，业务相关，非数字开头，库名简短、禁止使用保留字符串</li><li>必须制定字符集</li></ol><p>创建库</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">CREATE</span><span style="color:#032F62;"> DATABASE</span><span style="color:#032F62;"> donny</span><span style="color:#032F62;"> CHARSET</span><span style="color:#032F62;"> utf8mb4</span><span style="color:#24292E;">;</span></span></code></pre></div><p>查库</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> database</span><span style="color:#24292E;">;</span></span></code></pre></div><p>查看建库的具体信息</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> create</span><span style="color:#032F62;"> database</span><span style="color:#032F62;"> donny</span><span style="color:#24292E;">;</span></span></code></pre></div><p>修改库</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">alter</span><span style="color:#032F62;"> database</span><span style="color:#032F62;"> donny</span><span style="color:#032F62;"> charset</span><span style="color:#032F62;"> utf8</span><span style="color:#24292E;">;</span></span></code></pre></div><p>原则：从小往大的改</p><p>删除库</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">drop</span><span style="color:#032F62;"> database</span><span style="color:#032F62;"> donny</span><span style="color:#24292E;">;</span></span></code></pre></div><p>注意：除了管理员，任何人没有删库权限</p><p><strong>（2）表定义：</strong></p><ol><li>表名，规范同库</li><li>必须设置存储引擎和字符集</li><li>数据类型：合适、简短，足够</li></ol><p>创建表</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 创建表(user表)</span></span>
<span class="line"><span style="color:#6F42C1;">create</span><span style="color:#032F62;"> table</span><span style="color:#032F62;"> user</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查询表</span></span>
<span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> tables</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看表结构</span></span>
<span class="line"><span style="color:#6F42C1;">desc</span><span style="color:#032F62;"> user</span><span style="color:#24292E;">;</span></span></code></pre></div><p>修改表</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 添加手机列</span></span>
<span class="line"><span style="color:#6F42C1;">alter</span><span style="color:#032F62;"> table</span><span style="color:#032F62;"> donny</span><span style="color:#032F62;"> add</span><span style="color:#032F62;"> column</span><span style="color:#032F62;"> tel</span><span style="color:#032F62;"> bigint</span><span style="color:#032F62;"> not</span><span style="color:#032F62;"> null</span><span style="color:#032F62;"> unique</span><span style="color:#032F62;"> key</span><span style="color:#032F62;"> comment</span><span style="color:#032F62;"> &#39;手机号&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 修改手机列定义类型</span></span>
<span class="line"><span style="color:#6F42C1;">alter</span><span style="color:#032F62;"> table</span><span style="color:#032F62;"> donny</span><span style="color:#032F62;"> modify</span><span style="color:#032F62;"> tel</span><span style="color:#032F62;"> char</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">11</span><span style="color:#24292E;">) </span><span style="color:#032F62;">not</span><span style="color:#032F62;"> null</span><span style="color:#032F62;"> unique</span><span style="color:#032F62;"> key</span><span style="color:#032F62;"> comment</span><span style="color:#032F62;"> &#39;手机号&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 删除手机列</span></span>
<span class="line"><span style="color:#6F42C1;">alter</span><span style="color:#032F62;"> table</span><span style="color:#032F62;"> donny</span><span style="color:#032F62;"> drop</span><span style="color:#032F62;"> tel</span><span style="color:#24292E;">;</span></span></code></pre></div><p>删除表</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">drop</span><span style="color:#032F62;"> table</span><span style="color:#032F62;"> donny</span><span style="color:#24292E;">;</span></span></code></pre></div><p>注意事项：</p><ul><li>在 MySQL 中，DDL 语句在对标进行操作时，会锁“元数据表”.此时所有修改的命令无法正常运行。</li><li>尽量避开业务繁忙期间，进行 DDL。</li><li>建议使用 pt-online-schema-change（pt-osc），gh-ost 工具进行 DDL 操作，降低锁表的影响</li><li>8.0 版本可以不用 pt 工具</li></ul><h4 id="dcl-数据控制语言" tabindex="-1">DCL 数据控制语言 <a class="header-anchor" href="#dcl-数据控制语言" aria-label="Permalink to &quot;DCL 数据控制语言&quot;">​</a></h4><ul><li>grant</li><li>Revoke</li></ul><h4 id="dml-数据操作语言" tabindex="-1">DML 数据操作语言 <a class="header-anchor" href="#dml-数据操作语言" aria-label="Permalink to &quot;DML 数据操作语言&quot;">​</a></h4><p>作用：对表中数据进行行操作</p><ul><li>inset 应用</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">insert</span><span style="color:#032F62;"> into</span><span style="color:#032F62;"> student</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">id,</span><span style="color:#032F62;"> name,</span><span style="color:#032F62;"> age</span><span style="color:#24292E;">) </span><span style="color:#032F62;">values</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">1,</span><span style="color:#032F62;"> &#39;donny&#39;,</span><span style="color:#005CC5;"> 18</span><span style="color:#24292E;">)</span></span></code></pre></div><p>简写语法：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">insert</span><span style="color:#032F62;"> into</span><span style="color:#032F62;"> student</span><span style="color:#032F62;"> values</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">1,</span><span style="color:#032F62;"> &#39;donny&#39;,</span><span style="color:#005CC5;"> 18</span><span style="color:#24292E;">)</span></span></code></pre></div><ul><li>update</li></ul><p>前提：必须明确要改哪一行，一般 update 语句都有 where 条件，指定某一行，否则修改整列</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">update</span><span style="color:#032F62;"> student</span><span style="color:#032F62;"> set</span><span style="color:#032F62;"> name=&quot;sl&quot;</span><span style="color:#032F62;"> where</span><span style="color:#032F62;"> id=</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">;</span></span></code></pre></div><p>查看</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> * from student;</span></span></code></pre></div><ul><li>delete</li></ul><p>前提：必须明确要删除哪些行，一般都有 where 条件语句</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">delete</span><span style="color:#032F62;"> from</span><span style="color:#032F62;"> student</span><span style="color:#032F62;"> where</span><span style="color:#032F62;"> id=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p><strong>实现伪删除：</strong></p><p>修改表结构，添加 state 状态列</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">alter</span><span style="color:#032F62;"> table</span><span style="color:#032F62;"> student</span><span style="color:#032F62;"> add</span><span style="color:#032F62;"> column</span><span style="color:#032F62;"> state</span><span style="color:#032F62;"> tinyint</span><span style="color:#032F62;"> not</span><span style="color:#032F62;"> null</span><span style="color:#032F62;"> default</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">;</span></span></code></pre></div><p>删除数据改为 update</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">update</span><span style="color:#032F62;"> student</span><span style="color:#032F62;"> set</span><span style="color:#032F62;"> state=</span><span style="color:#005CC5;">0</span><span style="color:#032F62;"> where</span><span style="color:#032F62;"> id=</span><span style="color:#005CC5;">1</span></span></code></pre></div><p>查询语句改为</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;"> select</span><span style="color:#24292E;"> * from student where state</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p>删除全表的方式：</p><ul><li><p>delete from student;</p><ul><li>逻辑上，逐行删除，数据量大，速度慢。</li><li>并没有从磁盘上删除，只是在存储层面打标记，磁盘空间不会立即释放。</li><li>HWM 高水平位线不会降低</li></ul></li><li><p>drop table student;</p><ul><li>将表结构（元数据）和数据行，从物理层次删除。</li><li>只能从备份恢复。</li></ul></li><li><p>truncate table student;</p><ul><li>清空表段中的所有数据页。</li><li>从物理层次删除。</li><li>磁盘空间立即释放，HWM 高水平线立即降低。</li></ul></li></ul><p>恢复数据：</p><ul><li>备份+日志</li><li>翻转日志 binlog</li><li>通过延时从库恢复</li></ul><h4 id="dql-数据查询语言" tabindex="-1">DQL 数据查询语言 <a class="header-anchor" href="#dql-数据查询语言" aria-label="Permalink to &quot;DQL 数据查询语言&quot;">​</a></h4><ul><li><strong>select</strong></li></ul><p>功能：</p><p>1、获取表中的数据行</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> now();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#032F62;"> database</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#032F62;"> version</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#032F62;"> user</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 信息拼接</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> concat(user, </span><span style="color:#032F62;">&#39;@&#39;</span><span style="color:#24292E;">， host) from mysql.user;</span></span></code></pre></div><p>2、计算</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> 10 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 100</span></span></code></pre></div><p>3、查询数据库的参数</p><p>显示 MySQL 中所有参数信息</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> variables</span><span style="color:#24292E;">;</span></span></code></pre></div><p>查看 MySQL 中的参数信息</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> @@port;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#032F62;"> @@datadir</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#032F62;"> @@socket</span><span style="color:#24292E;">;</span></span></code></pre></div><p>4、标准用法</p><p>前提：了解其他字句配合使用</p><p>子句（默认执行顺序）：</p><ul><li>select</li><li>from</li><li>where <ul><li>配合比较判断符合：=，&lt;，&gt;……</li></ul></li><li>group by</li><li>having</li><li>order by</li><li>limit</li></ul><p>单表查询</p><p>查询指定列</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># world.city ==&gt; 库名.表名</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> name from world.city;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#005CC5;"> *</span><span style="color:#032F62;"> from</span><span style="color:#032F62;"> world.city</span><span style="color:#032F62;"> where</span><span style="color:#032F62;"> countrycode=&quot;CHN&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#005CC5;"> *</span><span style="color:#032F62;"> from</span><span style="color:#032F62;"> world.city</span><span style="color:#032F62;"> where</span><span style="color:#032F62;"> population</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">1000</span><span style="color:#24292E;">;</span></span></code></pre></div><ul><li><p><strong>where</strong></p></li><li><p><strong>like</strong></p></li></ul><p>配合 like 语句实现模糊查询</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 用%代替实现模糊查询</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> * from world.city where countrycode like </span><span style="color:#032F62;">&#39;CH%&#39;</span></span></code></pre></div><p>注意：like 语句在使用时，不要出现前面带%的模糊查询，原因是不走索引。</p><ul><li><strong>and 、or</strong></li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> * from world.city where countrycode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;CHN&#39;</span><span style="color:#6F42C1;"> AND</span><span style="color:#032F62;"> populatio</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">5000000</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#005CC5;"> *</span><span style="color:#032F62;"> from</span><span style="color:#032F62;"> world.city</span><span style="color:#032F62;"> where</span><span style="color:#032F62;"> countrycod</span><span style="color:#032F62;"> in</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;USA&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;CHN&#39;</span><span style="color:#24292E;">) AND population</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">5000000;</span></span></code></pre></div><ul><li><strong>between and</strong></li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> * from world.city where popullation </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">= 1000000 and population </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">= 2000000;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#005CC5;"> *</span><span style="color:#032F62;"> from</span><span style="color:#032F62;"> world.city</span><span style="color:#032F62;"> where</span><span style="color:#032F62;"> popullation</span><span style="color:#032F62;"> between</span><span style="color:#005CC5;"> 1000000</span><span style="color:#032F62;"> and</span><span style="color:#005CC5;"> 2000000</span><span style="color:#24292E;">;</span></span></code></pre></div><ul><li><strong>group by</strong></li></ul><p>通常配合聚合函数使用：</p><ul><li>Max()</li><li>min()</li><li>Avg()： 平均值</li><li>Count()：统计个数</li><li>sum()：求和</li><li>Group_concat()：列转行</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 统计city中每个国家的城市的个数</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> countrycode,count(id) from world.city group by countrycode;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 统计中国，每个省的城市个数</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> district,count(id) from world.city where countrycode</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;CHN&#39;</span><span style="color:#6F42C1;"> group</span><span style="color:#032F62;"> by</span><span style="color:#032F62;"> district</span></span></code></pre></div><ul><li><strong>having</strong></li></ul><p>having 属于后过滤，需要在 group by + 聚合函数后，再做判断过滤时使用。</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> district,sum(populatino) from world.city</span></span>
<span class="line"><span style="color:#6F42C1;">group</span><span style="color:#032F62;"> by</span><span style="color:#032F62;"> district</span></span>
<span class="line"><span style="color:#6F42C1;">having</span><span style="color:#032F62;"> sum</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">population</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;"> 5000000</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#032F62;"> district,sum</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">populatino</span><span style="color:#24292E;">) </span><span style="color:#032F62;">from</span><span style="color:#032F62;"> world.city</span></span>
<span class="line"><span style="color:#6F42C1;">group</span><span style="color:#032F62;"> by</span><span style="color:#032F62;"> district</span></span>
<span class="line"><span style="color:#6F42C1;">having</span><span style="color:#032F62;"> sum</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">population</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;"> 5000000</span></span>
<span class="line"><span style="color:#6F42C1;">order</span><span style="color:#032F62;"> by</span><span style="color:#032F62;"> sum</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">population</span><span style="color:#24292E;">) </span><span style="color:#032F62;">desc</span></span>
<span class="line"><span style="color:#6F42C1;">limit</span><span style="color:#005CC5;"> 5</span><span style="color:#032F62;"> offset</span><span style="color:#005CC5;"> 5</span><span style="color:#24292E;">;</span></span></code></pre></div><h4 id="select-多表联查" tabindex="-1">select 多表联查 <a class="header-anchor" href="#select-多表联查" aria-label="Permalink to &quot;select 多表联查&quot;">​</a></h4><p>多表连接查询类型：</p><ul><li>笛卡尔乘积</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> * from teacher,course;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#005CC5;"> *</span><span style="color:#032F62;"> from</span><span style="color:#032F62;"> teacher</span><span style="color:#032F62;"> join</span><span style="color:#032F62;"> course</span><span style="color:#24292E;">;</span></span></code></pre></div><ul><li>内连接</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 内连接示例</span></span>
<span class="line"><span style="color:#24292E;">select</span></span>
<span class="line"><span style="color:#6F42C1;">  city.name</span><span style="color:#032F62;"> as</span><span style="color:#032F62;"> city_name,</span></span>
<span class="line"><span style="color:#6F42C1;">  country.name</span><span style="color:#032F62;"> as</span><span style="color:#032F62;"> country_name,</span></span>
<span class="line"><span style="color:#6F42C1;">  country.continent</span></span>
<span class="line"><span style="color:#6F42C1;">from</span><span style="color:#032F62;"> city</span></span>
<span class="line"><span style="color:#6F42C1;">join</span><span style="color:#032F62;"> country</span></span>
<span class="line"><span style="color:#6F42C1;">on</span><span style="color:#032F62;"> city.countrycode</span><span style="color:#032F62;"> =</span><span style="color:#032F62;"> country.code</span></span>
<span class="line"><span style="color:#6F42C1;">where</span><span style="color:#032F62;"> city.population</span><span style="color:#D73A49;"> &gt;</span><span style="color:#005CC5;"> 1000000</span><span style="color:#24292E;">;</span></span></code></pre></div><ul><li>外连接 <ul><li>left join： 左表所有数据，右表有满足条件的数据</li><li>right join：右表所有数据，左表满足条件的数据</li></ul></li></ul><p>示例：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># left join</span></span>
<span class="line"><span style="color:#24292E;">select</span></span>
<span class="line"><span style="color:#6F42C1;">city.name,</span></span>
<span class="line"><span style="color:#6F42C1;">country.name,</span></span>
<span class="line"><span style="color:#6F42C1;">country.name</span></span>
<span class="line"><span style="color:#6F42C1;">from</span><span style="color:#032F62;"> city</span></span>
<span class="line"><span style="color:#6F42C1;">left</span><span style="color:#032F62;"> join</span><span style="color:#032F62;"> country</span></span>
<span class="line"><span style="color:#6F42C1;">on</span><span style="color:#032F62;"> city.countrycode</span><span style="color:#032F62;"> =</span><span style="color:#032F62;"> country.code</span></span>
<span class="line"><span style="color:#6F42C1;">where</span><span style="color:#032F62;"> city.population</span><span style="color:#D73A49;"> &lt;</span><span style="color:#005CC5;"> 100</span></span>
<span class="line"><span style="color:#6F42C1;">order</span><span style="color:#032F62;"> by</span><span style="color:#032F62;"> city.population</span><span style="color:#032F62;"> desc</span><span style="color:#24292E;">;</span></span></code></pre></div><p>备注：多表连接实际是将多张表中，有关联的部分数据，合并成一张新表，在新表中做查询操作。</p><p>例子：</p><p><strong>1、找关联表</strong></p><p>City 表:</p><ul><li>城市名 city.name</li><li>城市人口 city.population</li></ul><p>Country 表:</p><ul><li>国家名 country.name</li><li>国土面积 country.surfacearea</li></ul><p><strong>2、找关联条件</strong></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">from</span><span style="color:#032F62;"> city</span><span style="color:#032F62;"> join</span><span style="color:#032F62;"> country</span></span>
<span class="line"><span style="color:#6F42C1;">on</span><span style="color:#032F62;"> cirty.countryCode=country.code</span></span></code></pre></div><p><strong>3、罗列其它查询条件</strong></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> city.name,city.population, country.name, country.sufacearea</span></span>
<span class="line"><span style="color:#6F42C1;">from</span><span style="color:#032F62;"> city</span><span style="color:#032F62;"> join</span><span style="color:#032F62;"> country</span></span>
<span class="line"><span style="color:#6F42C1;">on</span><span style="color:#032F62;"> cirty.countryCode=country.code</span></span>
<span class="line"><span style="color:#6F42C1;">where</span><span style="color:#032F62;"> city.name=&#39;武汉&#39;</span></span></code></pre></div><h5 id="select-外连接" tabindex="-1">Select 外连接 <a class="header-anchor" href="#select-外连接" aria-label="Permalink to &quot;Select 外连接&quot;">​</a></h5><p>作用： 强制驱动表</p><p>驱动表是什么？</p><p>在多表连接当中，承当 for 循环中外层循环的角色。</p><h5 id="select-内连接" tabindex="-1">Select 内连接 <a class="header-anchor" href="#select-内连接" aria-label="Permalink to &quot;Select 内连接&quot;">​</a></h5><h5 id="select-别名应用" tabindex="-1">Select 别名应用 <a class="header-anchor" href="#select-别名应用" aria-label="Permalink to &quot;Select 别名应用&quot;">​</a></h5><ul><li>列别名:使用 AS 关键字(可省略)给列起别名</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> name AS city_name from city;</span></span>
<span class="line"><span style="color:#24292E;">s</span><span style="color:#032F62;">elect</span><span style="color:#032F62;"> name</span><span style="color:#032F62;"> city_name</span><span style="color:#032F62;"> from</span><span style="color:#032F62;"> city</span><span style="color:#24292E;">; </span><span style="color:#6A737D;"># AS 可省略</span></span></code></pre></div><ul><li>表别名:给表起别名简化 SQL 语句</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> c.name, co.name</span></span>
<span class="line"><span style="color:#6F42C1;">from</span><span style="color:#032F62;"> city</span><span style="color:#032F62;"> c</span></span>
<span class="line"><span style="color:#6F42C1;">join</span><span style="color:#032F62;"> country</span><span style="color:#032F62;"> co</span></span>
<span class="line"><span style="color:#6F42C1;">on</span><span style="color:#032F62;"> c.countrycode</span><span style="color:#032F62;"> =</span><span style="color:#032F62;"> co.code</span><span style="color:#24292E;">;</span></span></code></pre></div>`,203)]))}const h=a(o,[["render",e]]);export{u as __pageData,h as default};
