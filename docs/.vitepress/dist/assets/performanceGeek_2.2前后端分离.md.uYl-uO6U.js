import{_ as e,c as l,o as i,ag as r}from"./chunks/framework.DPDPlp3K.js";const _=JSON.parse('{"title":"2.2 前后端分离","description":"","frontmatter":{},"headers":[],"relativePath":"performanceGeek/2.2前后端分离.md","filePath":"performanceGeek/2.2前后端分离.md"}'),t={name:"performanceGeek/2.2前后端分离.md"};function o(n,a,h,u,d,c){return i(),l("div",null,a[0]||(a[0]=[r('<h1 id="_2-2-前后端分离" tabindex="-1">2.2 前后端分离 <a class="header-anchor" href="#_2-2-前后端分离" aria-label="Permalink to &quot;2.2 前后端分离&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><ul><li>前后端分离是指研发人员分离、业务代码分离、后端实现业务接口，前端渲染页面。</li></ul><h2 id="技术实现" tabindex="-1">技术实现 <a class="header-anchor" href="#技术实现" aria-label="Permalink to &quot;技术实现&quot;">​</a></h2><ul><li>后端只负责功能接口实现，提供按照约定的数据格式并封装好的API 接口。</li><li>前端负责业务具体实现，获取到API接口数据后，进行页面模板拼接和渲染，独立上线。</li></ul><h2 id="协作方式" tabindex="-1">协作方式 <a class="header-anchor" href="#协作方式" aria-label="Permalink to &quot;协作方式&quot;">​</a></h2><ul><li>前端负责实现页面前端交互，根据后端API 接口拼装前端模板。</li><li>后端专注于业务功能实现和 API 接口封装。</li></ul><h2 id="技术优势" tabindex="-1">技术优势 <a class="header-anchor" href="#技术优势" aria-label="Permalink to &quot;技术优势&quot;">​</a></h2><ul><li>团队更加专注</li><li>提升了开发效率</li><li>增加代码可维护性</li></ul><h2 id="技术架构" tabindex="-1">技术架构 <a class="header-anchor" href="#技术架构" aria-label="Permalink to &quot;技术架构&quot;">​</a></h2><ul><li>后端架构:Java、PHP+Nginx，使用微服务(比如dubbo等)等实现业务的解耦，所有的服务使用某种协议提供不同的服务(比如JSF 等)。</li><li>前端架构:使用Angular、React、Vue前端框架并部署页面至CDN。</li><li>前端架构2:使用Angular、React、Vue前端框架并部署在Node Server。</li></ul><h2 id="技术不足" tabindex="-1">技术不足 <a class="header-anchor" href="#技术不足" aria-label="Permalink to &quot;技术不足&quot;">​</a></h2><ul><li>因为前端需要负责一大部分业务逻辑实现，和服务端同步、静态化，需要前端人力非常多。</li><li>页面数据异步渲染，不利于SEO，搜索引擎更喜欢纯静态页面。</li></ul><h2 id="选型建议" tabindex="-1">选型建议 <a class="header-anchor" href="#选型建议" aria-label="Permalink to &quot;选型建议&quot;">​</a></h2><ul><li>这是大型互联网公司正在采用的开发模式，一句话，如果考虑用户体验，以及前端人力够用，就可以积极采用。</li></ul>',15)]))}const m=e(t,[["render",o]]);export{_ as __pageData,m as default};
