import{_ as a,c as o,o as s,ag as t}from"./chunks/framework.DPDPlp3K.js";const h=JSON.parse('{"title":"命名规范","description":"","frontmatter":{},"headers":[],"relativePath":"style/name/命名规范.md","filePath":"style/name/命名规范.md"}'),n={name:"style/name/命名规范.md"};function c(p,e,d,r,i,l){return s(),o("div",null,e[0]||(e[0]=[t('<h1 id="命名规范" tabindex="-1">命名规范 <a class="header-anchor" href="#命名规范" aria-label="Permalink to &quot;命名规范&quot;">​</a></h1><h2 id="项目命名" tabindex="-1">项目命名 <a class="header-anchor" href="#项目命名" aria-label="Permalink to &quot;项目命名&quot;">​</a></h2><p>全部采用小写方式，以中线分隔。</p><p>正例：<code>mall-management-system</code></p><p>反例：<code>mall_management-system / mallManagementSystem</code></p><h2 id="目录命名" tabindex="-1">目录命名 <a class="header-anchor" href="#目录命名" aria-label="Permalink to &quot;目录命名&quot;">​</a></h2><p>全部采用小写方式， 以中划线分隔，有复数结构时，要采用复数命名法， 缩写不用复数。</p><p>正例： <code>scripts/styles/components/images/utils/layouts/demo-styles/demo-scripts/img/doc</code></p><p>反例： <code>script/style/demo_scripts/demoStyles/imgs/docs</code></p><p>【特殊】VUE 的项目中的 components 中的组件目录，使用 kebab-case命名。</p><p>正例： <code>head-search/page-loading/authorized/notice-icon</code></p><p>反例： <code>HeadSearch/PageLoading</code></p><p>【特殊】VUE 的项目中的除 components 组件目录外的所有目录也使用 kebab-case命名。</p><p>正例： <code>page-one/shopping-car/user-management</code></p><p>反例： <code>ShoppingCar/UserManagement</code></p><h2 id="js、css、scss、html、png-文件命名" tabindex="-1">JS、CSS、SCSS、HTML、PNG 文件命名 <a class="header-anchor" href="#js、css、scss、html、png-文件命名" aria-label="Permalink to &quot;JS、CSS、SCSS、HTML、PNG 文件命名&quot;">​</a></h2><p>全部采用小写方式， 以中划线分隔。</p><p>正例： <code>render-dom.js/signup.css/index.html/company-logo.png</code></p><p>反例： <code>renderDom.js/UserManagement.html</code></p><h2 id="命名严谨性" tabindex="-1">命名严谨性 <a class="header-anchor" href="#命名严谨性" aria-label="Permalink to &quot;命名严谨性&quot;">​</a></h2><p>代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。 说明：正确的 英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式也要避免采用</p><p>正例： <code>henan/luoyang/rmb 等国际通用的名称，可视同英文</code></p><p>反例： <code>DaZhePromotion [打折] / getPingfenByName() [评分] / int 某变量 = 3</code></p><p>杜绝完全不规范的缩写，避免望文不知义：</p><p>反例： AbstractClass“缩写”命名成 AbsClass；condition “缩写”命名成 condi，此类随意缩写严重 降低了代码的可阅读性。</p>',25)]))}const _=a(n,[["render",c]]);export{h as __pageData,_ as default};
