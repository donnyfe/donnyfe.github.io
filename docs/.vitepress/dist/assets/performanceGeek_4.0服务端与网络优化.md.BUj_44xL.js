import{_ as l,c as e,o as i,ag as t}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"4.0 服务端与网络优化","description":"","frontmatter":{},"headers":[],"relativePath":"performanceGeek/4.0服务端与网络优化.md","filePath":"performanceGeek/4.0服务端与网络优化.md"}'),o={name:"performanceGeek/4.0服务端与网络优化.md"};function r(d,a,u,n,h,c){return i(),e("div",null,a[0]||(a[0]=[t('<h1 id="_4-0-服务端与网络优化" tabindex="-1">4.0 服务端与网络优化 <a class="header-anchor" href="#_4-0-服务端与网络优化" aria-label="Permalink to &quot;4.0 服务端与网络优化&quot;">​</a></h1><h2 id="缓存配置和优化方案" tabindex="-1">缓存配置和优化方案 <a class="header-anchor" href="#缓存配置和优化方案" aria-label="Permalink to &quot;缓存配置和优化方案&quot;">​</a></h2><h3 id="expires" tabindex="-1">Expires <a class="header-anchor" href="#expires" aria-label="Permalink to &quot;Expires&quot;">​</a></h3><ul><li>定义 <ul><li>响应头包含日期/时间，即在此时候之后，响应过期</li><li>无效的日期，比如0，代表着过去的日期，即该资源已经过期</li><li>如果在Cache-Control响应头设置了&quot;max-age&quot;或者&quot;s-max-age&quot;指令，那么 Expires 头会被忽略</li></ul></li><li>语法:Expires: Tue, 17 Dec 2019 07:01:44 GMT</li><li>实例:Expires: Tue, 17 Dec 2019 07:14:29 GMT</li></ul><h3 id="cache-control" tabindex="-1">Cache-Control <a class="header-anchor" href="#cache-control" aria-label="Permalink to &quot;Cache-Control&quot;">​</a></h3><ul><li>定义 <ul><li>通用消息头字段，通过指定指令来实现缓存机制。缓存指令是单向的，这意味着在请求中设置的指令，不一定被包含在响应中。</li></ul></li><li>语法: <ul><li><code>Cache-Control: max-age=&lt;seconds&gt;【设置缓存存储的最大周期，超过这个时间缓存被认为过期(单位秒)。与Expires相反，时间是相对于请求的时间。</code></li></ul></li><li>实例: <ul><li>Cache-Control: max-age=600</li></ul></li></ul><h3 id="etag" tabindex="-1">ETag <a class="header-anchor" href="#etag" aria-label="Permalink to &quot;ETag&quot;">​</a></h3><ul><li>定义 <ul><li>HTTP 响应头是资源的特定版本的标识符。这可以让缓存更高效，并节省带宽，因为如果内容没有改变，Web 服务器不需要发送完整的响应。而如果内容发生了变化，使用ETag有助于防止资源的同时更新相互覆盖。</li><li>如果给定URL 中的资源更改，则一定要生成新的ETag值。因此ETags类似于指纹，也可能被某些服务器用于跟踪。比较ETags能快速确定此资源是否变化，但也可能被跟踪服务器永久存留。</li><li><code>语法:ETag:&quot;&lt;etag_value&gt;&quot;</code></li></ul></li><li>实例:ETag:&quot;5c6ccc12-1d45&quot;</li></ul><h3 id="last-modified" tabindex="-1">Last-Modified <a class="header-anchor" href="#last-modified" aria-label="Permalink to &quot;Last-Modified&quot;">​</a></h3><ul><li>The Last-Modified 是一个响应首部，其中包含源头服务器认定的资源做出修改的 日期及时间。它通常被用作一个验证器来判断接收到的或者存储的资源是否彼此一致。由于精确度比ETag 要低，所以这是一个备用机制。包含有If-Modified- Since 或If-Unmodified-Since首部的条件请求会使用这个字段。</li><li><code>语法:Last-Modified:&lt;day-name&gt;, &lt;day&gt; &lt;month&gt;&lt;year&gt;&lt;hour&gt;:&lt;minute&gt;:&lt;second&gt; GMT</code></li><li>实例:Last-Modified: Wed, 20 Feb 2019 03:40:02 GMT</li></ul><h3 id="date" tabindex="-1">Date <a class="header-anchor" href="#date" aria-label="Permalink to &quot;Date&quot;">​</a></h3><ul><li>定义 <ul><li>Date 是一个通用首部，其中包含了报文创建的日期和时间。</li></ul></li><li>语法 <ul><li><code>Date:&lt;day-name&gt;, &lt;day&gt;&lt;month&gt;&lt;year&gt;&lt;hour&gt;:&lt;minute&gt;:&lt;second&gt; GMT</code></li></ul></li><li>实例 <ul><li>Date: Tue, 17 Dec 2019 07:08:41 GMT</li></ul></li></ul><h3 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h3><ul><li>定义 <ul><li>HTTP 响应状态代码指示特定HTTP请求是否已成功完成。响应分为五类:信息响应 (100-199)，成功响应(200-299)，重定向(300-399)，客户端错误(400-499)和服务器错误(500-599)。</li></ul></li><li>实例 <ul><li>Status:200</li></ul></li></ul><h2 id="gizp压缩" tabindex="-1">Gizp压缩 <a class="header-anchor" href="#gizp压缩" aria-label="Permalink to &quot;Gizp压缩&quot;">​</a></h2><h3 id="好处" tabindex="-1">好处 <a class="header-anchor" href="#好处" aria-label="Permalink to &quot;好处&quot;">​</a></h3><ul><li>对文本进行压缩(HTML/CSS/JS)</li><li>而对非文本不压缩(jpg/gif/png/)</li><li>压缩比约50%-70%</li></ul><h3 id="配置方法" tabindex="-1">配置方法 <a class="header-anchor" href="#配置方法" aria-label="Permalink to &quot;配置方法&quot;">​</a></h3><ul><li>Nginx配置:nginx.conf文件增加gzip on</li><li>Apache 配置:AddOutputFilter ByType和AddOutputFilter</li></ul><h3 id="生效检测" tabindex="-1">生效检测 <a class="header-anchor" href="#生效检测" aria-label="Permalink to &quot;生效检测&quot;">​</a></h3><p>Response header查看是否有 C ontent-Encoding: gzip，代表服务端已开启 gzip。</p>',21)]))}const p=l(o,[["render",r]]);export{g as __pageData,p as default};
