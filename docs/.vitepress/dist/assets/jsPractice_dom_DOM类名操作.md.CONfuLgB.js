import{_ as a,c as n,o as l,ag as p}from"./chunks/framework.DPDPlp3K.js";const D=JSON.parse('{"title":"DOM类名操作","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/dom/DOM类名操作.md","filePath":"jsPractice/dom/DOM类名操作.md"}'),o={name:"jsPractice/dom/DOM类名操作.md"};function e(c,s,t,r,y,i){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="dom类名操作" tabindex="-1">DOM类名操作 <a class="header-anchor" href="#dom类名操作" aria-label="Permalink to &quot;DOM类名操作&quot;">​</a></h1><h2 id="检查类名" tabindex="-1">检查类名 <a class="header-anchor" href="#检查类名" aria-label="Permalink to &quot;检查类名&quot;">​</a></h2><p>示例1</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> hasClass</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">el</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cls</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> el.className.</span><span style="color:#6F42C1;">match</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#6F42C1;"> RegExp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;(</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">s|^)&quot;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> cls </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &quot;(</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">s|$)&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>示例2</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> hasClass</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">el</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cls</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">el </span><span style="color:#D73A49;">||</span><span style="color:#D73A49;"> !</span><span style="color:#24292E;">cls) {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#005CC5;"> false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (cls.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">!==</span><span style="color:#D73A49;"> -</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    throw</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;className should not contain space.&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (el.classList) {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#24292E;"> el.classList.</span><span style="color:#6F42C1;">contains</span><span style="color:#24292E;">(cls);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> el.className </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39; &#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> cls </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39; &#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;</span><span style="color:#D73A49;"> -</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="添加类名" tabindex="-1">添加类名 <a class="header-anchor" href="#添加类名" aria-label="Permalink to &quot;添加类名&quot;">​</a></h2><p>示例1</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> addClass</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cls</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">hasClass</span><span style="color:#24292E;">(obj, cls)) obj.className </span><span style="color:#D73A49;">+=</span><span style="color:#032F62;"> &quot; &quot;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> cls;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>示例2</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> addClass</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">el</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cls</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">el) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">  var</span><span style="color:#24292E;"> curClass </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> el.className;</span></span>
<span class="line"><span style="color:#D73A49;">  var</span><span style="color:#24292E;"> classes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (cls </span><span style="color:#D73A49;">||</span><span style="color:#032F62;"> &#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">, j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> classes.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> j; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    var</span><span style="color:#24292E;"> clsName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> classes[i];</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">clsName) </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (el.classList) {</span></span>
<span class="line"><span style="color:#24292E;">      el.classList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(clsName);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">hasClass</span><span style="color:#24292E;">(el, clsName)) {</span></span>
<span class="line"><span style="color:#24292E;">      curClass </span><span style="color:#D73A49;">+=</span><span style="color:#032F62;"> &#39; &#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> clsName;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">el.classList) {</span></span>
<span class="line"><span style="color:#24292E;">    el.className </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> curClass;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="移除类名" tabindex="-1">移除类名 <a class="header-anchor" href="#移除类名" aria-label="Permalink to &quot;移除类名&quot;">​</a></h2><p>示例1</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> removeClass</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cls</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">hasClass</span><span style="color:#24292E;">(obj, cls)) {</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> reg</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> RegExp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;(</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">s|^)&quot;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> cls </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &quot;(</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">s|$)&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    obj.className </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.className.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(reg, </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>示例2</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> removeClass</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">el</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cls</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">el </span><span style="color:#D73A49;">||</span><span style="color:#D73A49;"> !</span><span style="color:#24292E;">cls) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">  var</span><span style="color:#24292E;"> classes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cls.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">  var</span><span style="color:#24292E;"> curClass </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39; &#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> el.className </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39; &#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">, j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> classes.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> j; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    var</span><span style="color:#24292E;"> clsName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> classes[i];</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">clsName) </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (el.classList) {</span></span>
<span class="line"><span style="color:#24292E;">      el.classList.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(clsName);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">hasClass</span><span style="color:#24292E;">(el, clsName)) {</span></span>
<span class="line"><span style="color:#24292E;">      curClass </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> curClass.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> clsName </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39; &#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">el.classList) {</span></span>
<span class="line"><span style="color:#24292E;">    el.className </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> trim</span><span style="color:#24292E;">(curClass);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> trim</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> (string </span><span style="color:#D73A49;">||</span><span style="color:#032F62;"> &#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">[\\s\\uFEFF]</span><span style="color:#D73A49;">+|</span><span style="color:#005CC5;">[\\s\\uFEFF]</span><span style="color:#D73A49;">+$</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="切换类名" tabindex="-1">切换类名 <a class="header-anchor" href="#切换类名" aria-label="Permalink to &quot;切换类名&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#6F42C1;"> toggleClass</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">el</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cls</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">hasClass</span><span style="color:#24292E;">(el, cls)) {</span></span>
<span class="line"><span style="color:#6F42C1;">    removeClass</span><span style="color:#24292E;">(el, cls);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6F42C1;">    addClass</span><span style="color:#24292E;">(el, cls);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,18)]))}const A=a(o,[["render",e]]);export{D as __pageData,A as default};
