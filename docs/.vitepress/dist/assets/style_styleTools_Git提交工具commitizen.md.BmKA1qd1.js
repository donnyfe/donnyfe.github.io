import{_ as a,c as n,o,ag as e}from"./chunks/framework.DPDPlp3K.js";const y=JSON.parse('{"title":"commitizen","description":"","frontmatter":{},"headers":[],"relativePath":"style/styleTools/Git提交工具commitizen.md","filePath":"style/styleTools/Git提交工具commitizen.md"}'),l={name:"style/styleTools/Git提交工具commitizen.md"};function t(p,s,c,i,r,d){return o(),n("div",null,s[0]||(s[0]=[e(`<h1 id="commitizen" tabindex="-1">commitizen <a class="header-anchor" href="#commitizen" aria-label="Permalink to &quot;commitizen&quot;">​</a></h1><p>commitizen 是一个用来生成提交信息的工具，它可以在提交时提供一个交互式的界面，让我们按照规范填写提交信息的各个部分，比如类型、范围、主题、正文、页脚等。commitizen 可以与 commitlint 配合使用，保证生成的提交信息符合规范。使用 commitizen 可以让我们的提交信息更加方便、快捷、一致。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">pnpm</span><span style="color:#032F62;"> add</span><span style="color:#005CC5;"> -D</span><span style="color:#032F62;"> commitizen</span><span style="color:#032F62;"> cz-conventional-changelog</span></span></code></pre></div><h2 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h2><p>执行下面命令</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">pnpx</span><span style="color:#032F62;"> commitizen</span><span style="color:#032F62;"> init</span><span style="color:#032F62;"> cz-conventional-changelog</span><span style="color:#005CC5;"> --pnpm</span><span style="color:#005CC5;"> --save-dev</span><span style="color:#005CC5;"> --save-exact</span></span></code></pre></div><p>命令执行完后，在package.json中会多出一段配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#032F62;">  &quot;config&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#032F62;">    &quot;commitizen&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#032F62;">        &quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;./node_modules/cz-conventional-changelog&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在 package.json 的 scripts 里添加一条脚本命令</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#005CC5;">  &quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#005CC5;">    &quot;commit&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;git add . &amp;&amp; git-cz&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,11)]))}const u=a(l,[["render",t]]);export{y as __pageData,u as default};
