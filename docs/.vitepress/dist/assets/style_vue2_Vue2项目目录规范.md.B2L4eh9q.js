import{_ as a,c as n,o as l,ag as p}from"./chunks/framework.DPDPlp3K.js";const E=JSON.parse('{"title":"Vue2项目目录规范","description":"","frontmatter":{},"headers":[],"relativePath":"style/vue2/Vue2项目目录规范.md","filePath":"style/vue2/Vue2项目目录规范.md"}'),o={name:"style/vue2/Vue2项目目录规范.md"};function e(t,s,c,r,y,i){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="vue2项目目录规范" tabindex="-1">Vue2项目目录规范 <a class="header-anchor" href="#vue2项目目录规范" aria-label="Permalink to &quot;Vue2项目目录规范&quot;">​</a></h1><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><p>vue 项目中的所有命名一定要与后端命名统一。 比如权限：后端 privilege, 前端无论 router , store, api 等都必须使用 privielege 单词！</p><h2 id="使用-vue-cli-脚手架" tabindex="-1">使用 Vue-cli 脚手架 <a class="header-anchor" href="#使用-vue-cli-脚手架" aria-label="Permalink to &quot;使用 Vue-cli 脚手架&quot;">​</a></h2><p>使用 vue-cli3 来初始化项目，项目名按照上面的命名规范。</p><h2 id="目录说明" tabindex="-1">目录说明 <a class="header-anchor" href="#目录说明" aria-label="Permalink to &quot;目录说明&quot;">​</a></h2><p>目录名按照上面的命名规范，其中 components 组件用大写驼峰，其余除 components 组件目录外的所有目录均使用 kebab-case 命名。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">src                                  源码目录</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> api                              所有api接口</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> assets                           静态资源，images, icons, styles等</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> components                       公用组件</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> config                           配置信息</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> constants                        常量信息，项目所有Enum, 全局常量等</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> directives                       自定义指令</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> filters                          过滤器，全局工具</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> datas                            模拟数据，临时存放</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> lib                              外部引用的插件存放及修改文件</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> mock                             模拟接口，临时存放</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> plugins                          插件，全局使用</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> router                           路由，统一管理</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> store                            vuex, 统一管理</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> themes                           自定义样式主题</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> views                            视图目录</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> role                                 role模块名</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#D73A49;"> |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">list.vue                    role列表页面</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#D73A49;"> |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">add.vue                     role新建页面</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#D73A49;"> |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">update.vue                  role更新页面</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#D73A49;"> |--</span><span style="color:#24292E;"> index.less                       role模块样式</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#D73A49;"> |--</span><span style="color:#24292E;"> components                       role模块通用组件文件夹</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> employee                             employee模块</span></span></code></pre></div><h3 id="_1-api-目录" tabindex="-1">1. api 目录 <a class="header-anchor" href="#_1-api-目录" aria-label="Permalink to &quot;1. api 目录&quot;">​</a></h3><p>文件、变量命名要与后端保持一致。 此目录对应后端 API 接口，按照后端一个 controller 一个 api js 文件。若项目较大时，可以按照业务划分子目录，并与后端保持一致。 api 中的方法名字要与后端 api url 尽量保持语义高度一致性。 对于 api 中的每个方法要添加注释，注释与后端 swagger 文档保持一致。</p><p>正例：</p><p>后端 url： EmployeeController.java</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">javascript</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">employee</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">add</span></span>
<span class="line"><span style="color:#D73A49;">/</span><span style="color:#24292E;">employee</span><span style="color:#D73A49;">/delete/</span><span style="color:#24292E;">{id}</span></span>
<span class="line"><span style="color:#D73A49;">/</span><span style="color:#24292E;">employee</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">update</span></span></code></pre></div><p>前端： employee.js</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">javascript  </span><span style="color:#6A737D;">// 添加员工</span></span>
<span class="line"><span style="color:#6F42C1;">  addEmployee</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">data</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#6F42C1;"> postAxios</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/employee/add&#39;</span><span style="color:#24292E;">, data)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#6A737D;">  // 更新员工信息</span></span>
<span class="line"><span style="color:#6F42C1;">  updateEmployee</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">data</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#6F42C1;"> postAxios</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/employee/update&#39;</span><span style="color:#24292E;">, data)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#6A737D;">    // 删除员工</span></span>
<span class="line"><span style="color:#6F42C1;">  deleteEmployee</span><span style="color:#24292E;">: (</span><span style="color:#E36209;">employeeId</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#6F42C1;"> postAxios</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/employee/delete/&#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> employeeId)</span></span>
<span class="line"><span style="color:#24292E;">   },</span></span></code></pre></div><h3 id="_2-assets-目录" tabindex="-1">2. assets 目录 <a class="header-anchor" href="#_2-assets-目录" aria-label="Permalink to &quot;2. assets 目录&quot;">​</a></h3><p>assets 为静态资源，里面存放 images, styles, icons 等静态资源，静态资源命名格式为 kebab-case</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">assets</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> icons</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> images</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> background</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">color.png</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> upload</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">header.png</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> styles</span></span></code></pre></div><h3 id="_3-components-目录" tabindex="-1">3. components 目录 <a class="header-anchor" href="#_3-components-目录" aria-label="Permalink to &quot;3. components 目录&quot;">​</a></h3><p>此目录应按照组件进行目录划分，目录命名为 KebabCase，组件命名规则也为 KebabCase</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">components</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> error</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">log</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> index.vue</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> index.less</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> markdown</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">editor</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> index.vue</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> index.js</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> kebab</span><span style="color:#D73A49;">-case</span></span></code></pre></div><h3 id="_4-constants-目录" tabindex="-1">4. constants 目录 <a class="header-anchor" href="#_4-constants-目录" aria-label="Permalink to &quot;4. constants 目录&quot;">​</a></h3><p>此目录存放项目所有常量，如果常量在 vue 中使用，请使用 vue-enum 插件<a href="https://github.com/1024-lab/vue-enum#readme" target="_blank" rel="noreferrer">(阅读文档)</a> 目录结构：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">|</span><span style="color:#24292E;">constants</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> index.js</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> role.js</span></span>
<span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> employee.js</span></span></code></pre></div><p>例子： employee.js</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> EMPLOYEE_STATUS</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  NORMAL: {</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    desc: </span><span style="color:#032F62;">&#39;正常&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  DISABLED: {</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    desc: </span><span style="color:#032F62;">&#39;禁用&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  DELETED: {</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    desc: </span><span style="color:#032F62;">&#39;已删除&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> EMPLOYEE_ACCOUNT_TYPE</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  QQ: {</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    desc: </span><span style="color:#032F62;">&#39;QQ登录&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  WECHAT: {</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    desc: </span><span style="color:#032F62;">&#39;微信登录&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  DINGDING: {</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    desc: </span><span style="color:#032F62;">&#39;钉钉登录&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  USERNAME: {</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    desc: </span><span style="color:#032F62;">&#39;用户名密码登录&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  EMPLOYEE_STATUS,</span></span>
<span class="line"><span style="color:#24292E;">  EMPLOYEE_ACCOUNT_TYPE</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h3 id="_5-router-与-store-目录" tabindex="-1">5. router 与 store 目录 <a class="header-anchor" href="#_5-router-与-store-目录" aria-label="Permalink to &quot;5. router 与 store 目录&quot;">​</a></h3><p>这两个目录一定要将业务进行拆分，不能放到一个 js 文件里。 router 尽量按照 views 中的结构保持一致 store 按照业务进行拆分不同的 js 文件</p><h3 id="_6-views-目录" tabindex="-1">6. views 目录 <a class="header-anchor" href="#_6-views-目录" aria-label="Permalink to &quot;6. views 目录&quot;">​</a></h3><p>命名要与后端、router、api 等保持一致 components 中组件要使用 PascalCase 规则</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">|--</span><span style="color:#24292E;"> views                                    视图目录</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> role                                 role模块名</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">list.vue                    role列表页面</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">add.vue                     role新建页面</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">update.vue                  role更新页面</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> index.less                      role模块样式</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> components                      role模块通用组件文件夹</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">header.vue             role头部组件</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> role</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">modal.vue              role弹出框组件</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> employee                            employee模块</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> behavior</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">log                        行为日志log模块</span></span>
<span class="line"><span style="color:#D73A49;">|</span><span style="color:#D73A49;">   |--</span><span style="color:#24292E;"> code</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">generator                      代码生成器模块</span></span></code></pre></div><h2 id="注释说明" tabindex="-1">注释说明 <a class="header-anchor" href="#注释说明" aria-label="Permalink to &quot;注释说明&quot;">​</a></h2><p>整理必须加注释的地方</p><p>公共组件使用说明 api 目录的接口 js 文件必须加注释 store 中的 state, mutation, action 等必须加注释 vue 文件中的 template 必须加注释，若文件较大添加 start end 注释 vue 文件的 methods，每个 method 必须添加注释 vue 文件的 data, 非常见单词要加注释</p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="_1-尽量不要手动操作-dom" tabindex="-1">1. 尽量不要手动操作 DOM <a class="header-anchor" href="#_1-尽量不要手动操作-dom" aria-label="Permalink to &quot;1. 尽量不要手动操作 DOM&quot;">​</a></h3><p>因使用 vue 框架，所以在项目开发中尽量使用 vue 的数据驱动更新 DOM，尽量（不到万不得已）不要手动操作 DOM，包括：增删改 dom 元素、以及更改样式、添加事件等。</p><h3 id="_2-删除无用代码" tabindex="-1">2. 删除无用代码 <a class="header-anchor" href="#_2-删除无用代码" aria-label="Permalink to &quot;2. 删除无用代码&quot;">​</a></h3><p>因使用了 git/svn 等代码版本工具，对于无用代码必须及时删除，例如：一些调试的 console 语句、无用的弃用功能代码。</p>`,39)]))}const A=a(o,[["render",e]]);export{E as __pageData,A as default};
