import{_ as s,c as a,o as n,ag as e}from"./chunks/framework.DPDPlp3K.js";const d=JSON.parse('{"title":"MySQL 体系结构","description":"","frontmatter":{},"headers":[],"relativePath":"mysql/MySQL的体系结构.md","filePath":"mysql/MySQL的体系结构.md"}'),o={name:"mysql/MySQL的体系结构.md"};function p(i,l,t,c,r,y){return n(),a("div",null,l[0]||(l[0]=[e(`<h1 id="mysql-体系结构" tabindex="-1">MySQL 体系结构 <a class="header-anchor" href="#mysql-体系结构" aria-label="Permalink to &quot;MySQL 体系结构&quot;">​</a></h1><h2 id="mysql-客户端-服务器工作模型-c-s" tabindex="-1">MySQL 客户端/服务器工作模型（C/S） <a class="header-anchor" href="#mysql-客户端-服务器工作模型-c-s" aria-label="Permalink to &quot;MySQL 客户端/服务器工作模型（C/S）&quot;">​</a></h2><h3 id="本地-socket-连接方式" tabindex="-1">本地 socket 连接方式 <a class="header-anchor" href="#本地-socket-连接方式" aria-label="Permalink to &quot;本地 socket 连接方式&quot;">​</a></h3><p>特点：只能在本地使用，不依赖与 IP 和端口，性能较好</p><ul><li>Socket 文件位置: <code>/tmp/mysql.sock</code></li><li>连接命令:</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">mysql</span><span style="color:#005CC5;"> -S</span><span style="color:#032F62;"> /tmp/mysql.sock</span></span></code></pre></div><h3 id="tcp-ip-连接" tabindex="-1">TCP/IP 连接 <a class="header-anchor" href="#tcp-ip-连接" aria-label="Permalink to &quot;TCP/IP 连接&quot;">​</a></h3><p>特点:可跨主机访问,依赖网络环境</p><ul><li>支持远程连接</li><li>连接命令:</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 格式</span></span>
<span class="line"><span style="color:#6F42C1;">mysql</span><span style="color:#005CC5;"> -h</span><span style="color:#D73A49;"> &lt;</span><span style="color:#032F62;">hos</span><span style="color:#24292E;">t</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;"> -P</span><span style="color:#D73A49;"> &lt;</span><span style="color:#032F62;">por</span><span style="color:#24292E;">t</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;"> -u</span><span style="color:#D73A49;"> &lt;</span><span style="color:#032F62;">use</span><span style="color:#24292E;">r</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;"> -p</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">password</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 示例</span></span>
<span class="line"><span style="color:#6F42C1;">mysql</span><span style="color:#005CC5;"> -h</span><span style="color:#005CC5;"> 127.0.0.1</span><span style="color:#005CC5;"> -P</span><span style="color:#005CC5;"> 3306</span><span style="color:#005CC5;"> -u</span><span style="color:#032F62;"> root</span><span style="color:#005CC5;"> -pMysql123</span></span></code></pre></div><h2 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-label="Permalink to &quot;实例&quot;">​</a></h2><p>服务器端：</p><ul><li>实例组成：mysqld 进程 + 工作线程 + 预分配的内存结构</li><li>数据管理、权限验证、SQL 执行等</li><li>一个实例可以管理多个数据库</li></ul><h2 id="mysql-的程序结构-工作原理" tabindex="-1">MySQL 的程序结构/工作原理 <a class="header-anchor" href="#mysql-的程序结构-工作原理" aria-label="Permalink to &quot;MySQL 的程序结构/工作原理&quot;">​</a></h2><p>MySQL 采用三层架构:</p><h3 id="server-层" tabindex="-1">Server 层 <a class="header-anchor" href="#server-层" aria-label="Permalink to &quot;Server 层&quot;">​</a></h3><ol><li><p>连接层功能:</p><ul><li>提供连接协议(socket、TCP/IP)</li><li>用户认证与授权</li><li>提供专用连接线程,转发 SQL 到 SQL 层</li><li>连接状态管理(show processlist)</li></ul></li><li><p>SQL 层功能:</p><ul><li>语法检查:检查 SQL 语句格式</li><li>语义检查:支持 DDL、DCL、DML、DTL 等类型</li><li>权限检查:验证用户对数据库对象的操作权限</li><li>查询解析:生成执行计划(全表扫描/索引扫描)</li><li>查询优化:选择最优执行方案</li><li>查询执行:按优化后的计划执行 SQL</li><li>查询缓存:query_cache默认关闭,建议使用 Redis 替代</li><li>日志记录:binlog(主从复制)、慢查询日志等</li></ul></li></ol><h3 id="存储引擎层" tabindex="-1">存储引擎层 <a class="header-anchor" href="#存储引擎层" aria-label="Permalink to &quot;存储引擎层&quot;">​</a></h3><p>与磁盘进行交互，负责数据存储和提取,支持多种存储引擎(InnoDB、MyISAM等),存储结构为:</p><ul><li>段(表):由多个区组成</li><li>区(簇):默认 1MB,连续 64 个页</li><li>页:默认 16KB，连续的 4 个 OS block，最小 I/O 单元</li></ul><h3 id="文件系统层" tabindex="-1">文件系统层 <a class="header-anchor" href="#文件系统层" aria-label="Permalink to &quot;文件系统层&quot;">​</a></h3><p>操作系统提供的文件存储</p><p><strong>连接状态管理示例</strong></p><p>客户端</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 进入Server层—&gt;连接层</span></span>
<span class="line"><span style="color:#6F42C1;">mysql</span><span style="color:#005CC5;"> -uroot</span><span style="color:#005CC5;"> -p123</span><span style="color:#005CC5;"> -h</span><span style="color:#005CC5;"> 0.0.0.0</span><span style="color:#005CC5;"> -P3306</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 显示mysql连接层的连接状态</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> show processlist;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看用户信息</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> user,host from mysql.user;</span></span></code></pre></div><h2 id="mysql-的逻辑结构" tabindex="-1">MySQL 的逻辑结构 <a class="header-anchor" href="#mysql-的逻辑结构" aria-label="Permalink to &quot;MySQL 的逻辑结构&quot;">​</a></h2><p>自上而下的层次结构:</p><ul><li>数据库(Database): <ul><li>库名</li><li>库属性(字符集、排序规则等)</li></ul></li><li>数据表(Table): <ul><li>表名</li><li>表属性(存储引擎、字符集等)</li><li>列定义</li><li>数据内容</li></ul></li><li>数据页(Page)</li><li>区(Extent)</li><li>段(Segment)</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># 查看数据库名</span></span>
<span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> databases</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用库</span></span>
<span class="line"><span style="color:#6F42C1;">use</span><span style="color:#032F62;"> db_name</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看所有数据表</span></span>
<span class="line"><span style="color:#6F42C1;">show</span><span style="color:#032F62;"> tables</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看表结构</span></span>
<span class="line"><span style="color:#6F42C1;">desc</span><span style="color:#032F62;"> table_name</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="mysql-的物理存储结构" tabindex="-1">MySQL 的物理存储结构 <a class="header-anchor" href="#mysql-的物理存储结构" aria-label="Permalink to &quot;MySQL 的物理存储结构&quot;">​</a></h2><p>存储引擎层采用分层存储:</p><ul><li>段(Segment):表空间的组成单位，一个表（段），可以由 1 个或多个区构成</li><li>区(Extent):默认 1MB,连续 64 个页</li><li>页(Page):默认 16KB, 连续的 4 个 OS block, 基本 I/O 单位</li><li>行(Row):实际存储的数据记录</li></ul><h2 id="mysql-性能优化重点" tabindex="-1">MySQL 性能优化重点 <a class="header-anchor" href="#mysql-性能优化重点" aria-label="Permalink to &quot;MySQL 性能优化重点&quot;">​</a></h2><p>核心优化方向:</p><ol><li><p>索引优化:</p><ul><li>合理设计索引</li><li>避免索引失效</li><li>控制索引数量</li></ul></li><li><p>I/O 优化:</p><ul><li>合理配置缓冲池</li><li>优化查询减少 I/O</li><li>使用合适的存储引擎</li></ul></li><li><p>配置优化:</p><ul><li>内存参数调优</li><li>并发参数调优</li><li>日志参数调优</li></ul></li></ol><h2 id="相关技术" tabindex="-1">相关技术 <a class="header-anchor" href="#相关技术" aria-label="Permalink to &quot;相关技术&quot;">​</a></h2><ul><li><p>NoSQL 数据库:</p><ul><li>MongoDB:文档数据库</li><li>Redis:键值存储</li><li>Elasticsearch:搜索引擎</li></ul></li><li><p>RDS(关系型数据库服务):</p><ul><li>AWS RDS</li><li>阿里云 RDS</li><li>腾讯云 RDS</li></ul></li></ul>`,37)]))}const u=s(o,[["render",p]]);export{d as __pageData,u as default};
