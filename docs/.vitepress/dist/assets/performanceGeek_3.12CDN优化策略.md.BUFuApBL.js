import{_ as e,c as l,o as i,ag as r}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"3.12 CDN优化策略","description":"","frontmatter":{},"headers":[],"relativePath":"performanceGeek/3.12CDN优化策略.md","filePath":"performanceGeek/3.12CDN优化策略.md"}'),t={name:"performanceGeek/3.12CDN优化策略.md"};function n(o,a,d,c,h,s){return i(),l("div",null,a[0]||(a[0]=[r('<h1 id="_3-12-cdn优化策略" tabindex="-1">3.12 CDN优化策略 <a class="header-anchor" href="#_3-12-cdn优化策略" aria-label="Permalink to &quot;3.12 CDN优化策略&quot;">​</a></h1><h2 id="cdn定义" tabindex="-1">CDN定义 <a class="header-anchor" href="#cdn定义" aria-label="Permalink to &quot;CDN定义&quot;">​</a></h2><p>内容分发网络(Content Deliver ry Network，简称CDN)是利用最靠近每每一位用户的服务器，更快、更可靠地将文件发送给用户分发网络。</p><h2 id="cdn优点" tabindex="-1">CDN优点 <a class="header-anchor" href="#cdn优点" aria-label="Permalink to &quot;CDN优点&quot;">​</a></h2><ul><li>提速:会给用户指派较近、较顺畅白的服务器节点，将数据传输给用户</li><li>低成本:服务器被放到不同地点，减咸少了互连的流量，也降低了带宽成本</li><li>高可用度:当某个服务器故障时，自动调用邻近地区的服务器</li></ul><h2 id="cdn回源" tabindex="-1">CDN回源 <a class="header-anchor" href="#cdn回源" aria-label="Permalink to &quot;CDN回源&quot;">​</a></h2><p>回源是指浏览器访问CDN 集群上静态文件时，文件缓存过期，直接穿透 DN集群而访问源站机器的形为。</p><h2 id="cdn缓存" tabindex="-1">CDN缓存 <a class="header-anchor" href="#cdn缓存" aria-label="Permalink to &quot;CDN缓存&quot;">​</a></h2><ul><li><p>三级缓存:浏览器本地缓存、CDN 边缘节点缓存、CDN 源站缓存</p></li><li><p>缓存设置:缓存时间设置的过短，CDN边缘节点缓存经常失效，导致频繁回源，增 大了源站负载，访问也慢;缓存时间设置的过长，文件更新慢，用户本地缓存不能及时更新;所以结合业务情况而定</p></li><li><p>不同静态资源类型缓存时间:</p><ul><li>HTML:3分钟</li><li>jS、CSS:10分钟、1天、30天</li></ul></li></ul><h2 id="cdn灰度发布" tabindex="-1">CDN灰度发布 <a class="header-anchor" href="#cdn灰度发布" aria-label="Permalink to &quot;CDN灰度发布&quot;">​</a></h2><ul><li><p>原理:在部分地区、部分地区的部分运营商优先发布静态资源，验证通过后，再进行全量发布。</p></li><li><p>实施:域名方面，设置特殊VIP 解析至要灰度的城市、运营商;源站机器方面，给 灰度的城市、运营商配置单独源站机器; 灰度的城市、运营商解析至这些特有机器 上。</p></li></ul><h2 id="cdn大促备战" tabindex="-1">CDN大促备战 <a class="header-anchor" href="#cdn大促备战" aria-label="Permalink to &quot;CDN大促备战&quot;">​</a></h2><ul><li>增加机房带宽</li><li>增加运营商流量</li><li>灾备:CDN 应用缓存时间由10分钟设置成1个小时，大促后恢复。</li></ul>',13)]))}const C=e(t,[["render",n]]);export{u as __pageData,C as default};
