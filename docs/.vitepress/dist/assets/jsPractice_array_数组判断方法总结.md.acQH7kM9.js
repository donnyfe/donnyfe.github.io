import{_ as s,c as t,o,ag as e}from"./chunks/framework.DPDPlp3K.js";const h=JSON.parse('{"title":"数组判断方法总结","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/array/数组判断方法总结.md","filePath":"jsPractice/array/数组判断方法总结.md"}'),r={name:"jsPractice/array/数组判断方法总结.md"};function n(l,a,c,i,p,d){return o(),t("div",null,a[0]||(a[0]=[e('<h1 id="数组判断方法总结" tabindex="-1">数组判断方法总结 <a class="header-anchor" href="#数组判断方法总结" aria-label="Permalink to &quot;数组判断方法总结&quot;">​</a></h1><h2 id="数组判断" tabindex="-1">数组判断 <a class="header-anchor" href="#数组判断" aria-label="Permalink to &quot;数组判断&quot;">​</a></h2><ul><li>Array.isArray()</li><li>Object.prototype.toString.call()</li><li>[] instanceof Array</li><li>[].constructor === Array</li></ul><h3 id="array-isarray" tabindex="-1">Array.isArray() <a class="header-anchor" href="#array-isarray" aria-label="Permalink to &quot;Array.isArray()&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">Array.</span><span style="color:#6F42C1;">isArray</span><span style="color:#24292E;">([])</span></span></code></pre></div><h3 id="object-prototype-tostring-call" tabindex="-1">Object.prototype.toString.call() <a class="header-anchor" href="#object-prototype-tostring-call" aria-label="Permalink to &quot;Object.prototype.toString.call()&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#005CC5;">Object</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.toString.</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">([]) </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;[object Array]&#39;</span></span></code></pre></div><h3 id="instanceof" tabindex="-1">instanceof <a class="header-anchor" href="#instanceof" aria-label="Permalink to &quot;instanceof&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">[] </span><span style="color:#D73A49;">instanceof</span><span style="color:#6F42C1;"> Array</span></span></code></pre></div><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">[].</span><span style="color:#005CC5;">constructor</span><span style="color:#D73A49;"> ===</span><span style="color:#24292E;"> Array</span></span></code></pre></div>',11)]))}const u=s(r,[["render",n]]);export{h as __pageData,u as default};
