import{_ as a,c as n,o as l,ag as p}from"./chunks/framework.DPDPlp3K.js";const A=JSON.parse('{"title":"数值相关技术","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/number/数值相关技术.md","filePath":"jsPractice/number/数值相关技术.md"}'),o={name:"jsPractice/number/数值相关技术.md"};function e(r,s,t,c,y,i){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="数值相关技术" tabindex="-1">数值相关技术 <a class="header-anchor" href="#数值相关技术" aria-label="Permalink to &quot;数值相关技术&quot;">​</a></h1><h2 id="检查数字是否越界" tabindex="-1">检查数字是否越界 <a class="header-anchor" href="#检查数字是否越界" aria-label="Permalink to &quot;检查数字是否越界&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 检测数字是否越界，如果越界给出提示</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@private</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {*number}</span><span style="color:#24292E;"> num</span><span style="color:#6A737D;"> 输入数</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> checkBoundary</span><span style="color:#24292E;">(</span><span style="color:#E36209;">num</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (num </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Number.MIN_SAFE_INTEGER </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> num </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> Number.MAX_SAFE_INTEGER) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">num</span><span style="color:#032F62;">} 超出了精度限制，结果可能不正确\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="计算平均值" tabindex="-1">计算平均值 <a class="header-anchor" href="#计算平均值" aria-label="Permalink to &quot;计算平均值&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> average</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">reduce</span><span style="color:#24292E;">((</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> arr.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">average</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">18</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">36</span><span style="color:#24292E;">]) </span></span>
<span class="line"><span style="color:#6A737D;">// 16</span></span></code></pre></div><h2 id="浮点数运算" tabindex="-1">浮点数运算 <a class="header-anchor" href="#浮点数运算" aria-label="Permalink to &quot;浮点数运算&quot;">​</a></h2><ul><li><a href="https://github.com/nefe/number-precision/blob/master/src/index.ts" target="_blank" rel="noreferrer">number-precision</a></li><li><a href="https://zhuanlan.zhihu.com/p/388205996" target="_blank" rel="noreferrer">js浮点数加减乘除</a></li></ul><h2 id="价格格式化" tabindex="-1">价格格式化 <a class="header-anchor" href="#价格格式化" aria-label="Permalink to &quot;价格格式化&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 数字格式化</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {number|string}</span><span style="color:#24292E;"> number</span><span style="color:#6A737D;"> 要格式化的数字</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {number}</span><span style="color:#24292E;"> decimals</span><span style="color:#6A737D;"> 保留几位小数</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {string}</span><span style="color:#24292E;"> decimalPoint</span><span style="color:#6A737D;"> 小数点符号</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {string}</span><span style="color:#24292E;"> thousandsSeparator</span><span style="color:#6A737D;"> 千分位符号</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span><span style="color:#6F42C1;"> {string}</span><span style="color:#6A737D;"> 格式化后的数字</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> priceFormat</span><span style="color:#24292E;">(</span><span style="color:#E36209;">number</span><span style="color:#24292E;">, </span><span style="color:#E36209;">decimals</span><span style="color:#D73A49;"> =</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">decimalPoint</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;.&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">thousandsSeparator</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;,&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;"> number </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">number</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">[</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">0-9+-Ee.]</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> n</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> !</span><span style="color:#6F42C1;">isFinite</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">number) </span><span style="color:#D73A49;">?</span><span style="color:#005CC5;"> 0</span><span style="color:#D73A49;"> :</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;">number</span></span>
<span class="line"><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> prec</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> !</span><span style="color:#6F42C1;">isFinite</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">decimals) </span><span style="color:#D73A49;">?</span><span style="color:#005CC5;"> 0</span><span style="color:#D73A49;"> :</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(decimals)</span></span>
<span class="line"><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> sep</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> thousandsSeparator </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;undefined&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">?</span><span style="color:#032F62;"> &#39;,&#39;</span><span style="color:#D73A49;"> :</span><span style="color:#24292E;"> thousandsSeparator</span></span>
<span class="line"><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> dec</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> decimalPoint </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;undefined&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">?</span><span style="color:#032F62;"> &#39;.&#39;</span><span style="color:#D73A49;"> :</span><span style="color:#24292E;"> decimalPoint</span></span>
<span class="line"><span style="color:#D73A49;"> let</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (prec </span><span style="color:#D73A49;">?</span><span style="color:#6F42C1;"> round</span><span style="color:#24292E;">(n, prec) </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39;&#39;</span><span style="color:#D73A49;"> :</span><span style="color:#032F62;"> \`\${</span><span style="color:#24292E;">Math</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">round</span><span style="color:#032F62;">(</span><span style="color:#24292E;">n</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;"> const</span><span style="color:#005CC5;"> re</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> /(-</span><span style="color:#D73A49;">?</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">)(</span><span style="color:#005CC5;">\\d</span><span style="color:#D73A49;">{3}</span><span style="color:#032F62;">)/</span></span>
<span class="line"><span style="color:#D73A49;"> while</span><span style="color:#24292E;"> (re.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(s[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])) {</span></span>
<span class="line"><span style="color:#24292E;">  s[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(re, </span><span style="color:#032F62;">\`$1\${</span><span style="color:#24292E;">sep</span><span style="color:#032F62;">}$2\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> ((s[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">||</span><span style="color:#032F62;"> &#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> &lt;</span><span style="color:#24292E;"> prec) {</span></span>
<span class="line"><span style="color:#24292E;">  s[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">||</span><span style="color:#032F62;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">  s[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+=</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Array</span><span style="color:#24292E;">(prec </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> s[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> +</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;"> return</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(dec)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,9)]))}const D=a(o,[["render",e]]);export{A as __pageData,D as default};
