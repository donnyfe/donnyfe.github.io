import{_ as a,c as r,o as t,ag as o}from"./chunks/framework.DPDPlp3K.js";const m=JSON.parse('{"title":"结构化克隆算法","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/other/结构化克隆算法.md","filePath":"algorithm/other/结构化克隆算法.md"}'),l={name:"algorithm/other/结构化克隆算法.md"};function i(_,e,s,n,h,d){return t(),r("div",null,e[0]||(e[0]=[o('<h1 id="结构化克隆算法" tabindex="-1">结构化克隆算法 <a class="header-anchor" href="#结构化克隆算法" aria-label="Permalink to &quot;结构化克隆算法&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>结构化克隆算法是由HTML5规范定义的用于复制复杂JavaScript对象的算法。通过来自 Workers的 postMessage() 或使用 IndexedDB 存储对象时在内部使用。它通过递归输入对象来构建克隆，同时保持先前访问过的引用的映射，以避免无限遍历循环。</p><h2 id="参考地址" tabindex="-1">参考地址 <a class="header-anchor" href="#参考地址" aria-label="Permalink to &quot;参考地址&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/API/DOM/The_structured_clone_algorithm" target="_blank" rel="noreferrer">MDN</a></li></ul>',5)]))}const p=a(l,[["render",i]]);export{m as __pageData,p as default};
