import{_ as l,c as s,o as e,ag as n}from"./chunks/framework.DPDPlp3K.js";const b=JSON.parse('{"title":"图片格式和应用场景","description":"","frontmatter":{},"headers":[],"relativePath":"performanceGeek/1.1图片格式和应用场景.md","filePath":"performanceGeek/1.1图片格式和应用场景.md"}'),p={name:"performanceGeek/1.1图片格式和应用场景.md"};function o(t,a,i,r,c,u){return e(),s("div",null,a[0]||(a[0]=[n(`<h1 id="图片格式和应用场景" tabindex="-1">图片格式和应用场景 <a class="header-anchor" href="#图片格式和应用场景" aria-label="Permalink to &quot;图片格式和应用场景&quot;">​</a></h1><h2 id="图片格式" tabindex="-1">图片格式 <a class="header-anchor" href="#图片格式" aria-label="Permalink to &quot;图片格式&quot;">​</a></h2><h3 id="jpeg" tabindex="-1">JPEG <a class="header-anchor" href="#jpeg" aria-label="Permalink to &quot;JPEG&quot;">​</a></h3><p>联合图像专家小组是一种针对彩色照片而广泛使用的有损压缩图形格式。</p><ul><li>介绍:栅格图形。常用文件扩展名为.jpg，也有.jpeg、.jpe。JPEG 在互联网上常被应用于存储和传输照片。</li><li>不适合:线条图形和文字、图标图形，因为它的压缩算法不太这些类型的图形;并且不支持透明度。</li><li>非常适合:颜色丰富的照片、彩色图大焦点图、通栏banner图;结构不规则的图形。</li></ul><h3 id="png" tabindex="-1">PNG <a class="header-anchor" href="#png" aria-label="Permalink to &quot;PNG&quot;">​</a></h3><p>便携式网络图形是一种无损压缩的位图图形格式，支持索引、灰度、RGB三种颜色方案以及 Alpha 通道等特性。</p><ul><li>介绍:栅格图形。PNG 最初是作为替代GIF来设计的，能够显示256色，文件比JPEG或者 GIF 大，但是PNG 非常好的保留了图像质量。支持Alpha通道的半透明和透明特性。最高支持24 位彩色图像(PNG-24)和8位灰度图像(PNG-8)。</li><li>不适合:由于是无损存储，彩色图像体积太大，所以不太适合。</li><li>非常适合:纯色、透明、线条绘图，图标;边缘清晰、有大块相同颜色区域;颜色数较少但需要半透明。</li></ul><h3 id="gif" tabindex="-1">GIF <a class="header-anchor" href="#gif" aria-label="Permalink to &quot;GIF&quot;">​</a></h3><p>图像互换格式是一种位图图形文件格式，以8位色(即256种颜色)重现真彩色的 图像，采用 LZW 压缩算法进行编码。</p><ul><li>介绍:栅格图形。支持256色;仅支持完全透明和完全不透明;如果需要比较通用的动画，GIF 是唯一选择。</li><li>不适合:每个像素只有8比特，不适合存储彩色图片。</li><li>非常适合:动画，图标。</li></ul><h3 id="webp" tabindex="-1">Webp <a class="header-anchor" href="#webp" aria-label="Permalink to &quot;Webp&quot;">​</a></h3><p>Webp 是一种现代图像格式，可为图像提供无损压缩和有损压缩，这使得它非常灵 活。由 Google 在购买 On2 Technologies 后发展出来，以BSD授权条款发布。</p><ul><li>介绍:优秀算法能同时保证一定程序上的图像质量和比较小的体积;可以插入多帧，实现动画效果;可以设置透明度;采用8位压缩算法。无损的Webp比 PNG 小26%，有损的 Webp 比JPEG 小25-34%，比GIF 有更好的动画。</li><li>不适合:最多处理256色，不适合于彩色图片。</li><li>非常适合:适用于图形和半透明图像。</li></ul><h2 id="_2-压缩图片" tabindex="-1">2 压缩图片 <a class="header-anchor" href="#_2-压缩图片" aria-label="Permalink to &quot;2 压缩图片&quot;">​</a></h2><ul><li>压缩png <ul><li>跨平台，压缩比高，压缩png24非常好</li><li>安装： npm i node-pngquant-native</li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> pngquant </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;node-pngquant-native&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> fs </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;fs&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">fs.</span><span style="color:#6F42C1;">readFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./in.png&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">err</span><span style="color:#24292E;">, </span><span style="color:#E36209;">buffer</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;">(err) </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> err</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  var</span><span style="color:#24292E;"> resBuffer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pngquant.</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">({}).</span><span style="color:#6F42C1;">compress</span><span style="color:#24292E;">(buffer)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  fs.</span><span style="color:#6F42C1;">writeFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./out.png&#39;</span><span style="color:#24292E;">, resBuffer, {</span></span>
<span class="line"><span style="color:#24292E;">    flags: </span><span style="color:#032F62;">&#39;wb&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">err</span><span style="color:#24292E;">) {})</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><ul><li><p>压缩jpg</p><ul><li>跨平台，有linux, mac, windows的解决方案</li><li>安装： npm i jpegtran -g</li><li>使用方法：jpegtran -copy none -optimize -outfile out.jpg in.jpg</li></ul></li><li><p>压缩GIF</p><ul><li>Gifsicle：通过改变每帧比例，减小gif文件的大小，同时可以使用透明来达到更小的文件大大小小，目前公认的解决方案</li><li>安装：<a href="http://www.lcdf.org/gifsicle/" target="_blank" rel="noreferrer">http://www.lcdf.org/gifsicle/</a></li><li>使用方式： <ul><li>优化级别为1基本不压缩</li><li>优化级别设置为不小于2 gifsicle --optimize=3 -o out.gif in.gif</li><li>将透明部分截去 gifsicle --optimize=3 --crop-transparency -o out.gif in.gif</li></ul></li></ul></li></ul><h2 id="图片尺寸随网络环境变化" tabindex="-1">图片尺寸随网络环境变化 <a class="header-anchor" href="#图片尺寸随网络环境变化" aria-label="Permalink to &quot;图片尺寸随网络环境变化&quot;">​</a></h2><ul><li>不同网络环境下(wifi/4G/3G)下加载不同尺寸和像素的图片，通过在图片URL后缀加不同参数改变</li><li>eg. <a href="http://img13.360buyimg.com/n1/s100x100/_ifs/t2443/71/2538811251/470889/c2ec38b3/570f3438N81a4b62c.jpg" target="_blank" rel="noreferrer">http://img13.360buyimg.com/n1/s100x100/_ifs/t2443/71/2538811251/470889/c2ec38b3/570f3438N81a4b62c.jpg</a></li></ul><h2 id="响应式图片" tabindex="-1">响应式图片 <a class="header-anchor" href="#响应式图片" aria-label="Permalink to &quot;响应式图片&quot;">​</a></h2><ul><li>JavaScript绑定事件检测窗口大小</li><li>CSS 媒体查询</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">@media</span><span style="color:#005CC5;"> screen</span><span style="color:#D73A49;"> and</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">max-width</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">640</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">  my_image{ </span><span style="color:#005CC5;">width</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">640</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>img标签属性</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">img</span><span style="color:#6F42C1;"> srcset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;img-320w.jpg, img-640w.jpg 2x, img-960w.jpg 3x&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">“img-960w.jpg</span><span style="color:#B31D28;font-style:italic;">&quot;</span><span style="color:#6F42C1;"> alt</span><span style="color:#24292E;">=</span><span style="color:#032F62;">“img”</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">(x描述符:表示图像的设备像素比)</span></span></code></pre></div><h2 id="图片懒加载" tabindex="-1">图片懒加载 <a class="header-anchor" href="#图片懒加载" aria-label="Permalink to &quot;图片懒加载&quot;">​</a></h2><ul><li>使用统一占位符</li><li>使用LQIP <ul><li>低质量图像占位符 (Low Quality Image Placeholders)</li><li>安装 npm i lqip</li></ul></li><li>使用SQIP <ul><li>SVG的图形占位符（SVG Quality Image Placeholders)</li><li>安装 npm i sqip</li></ul></li></ul><h2 id="图片替代" tabindex="-1">图片替代 <a class="header-anchor" href="#图片替代" aria-label="Permalink to &quot;图片替代&quot;">​</a></h2><ul><li>web Font代替图片</li><li>使用Data URI代替图片</li><li>采用Image spriting(雪碧图)</li></ul><h2 id="图片服务器自动优化解密" tabindex="-1">图片服务器自动优化解密 <a class="header-anchor" href="#图片服务器自动优化解密" aria-label="Permalink to &quot;图片服务器自动优化解密&quot;">​</a></h2><h3 id="名词解释" tabindex="-1">名词解释 <a class="header-anchor" href="#名词解释" aria-label="Permalink to &quot;名词解释&quot;">​</a></h3><ul><li>图片服务器自动化优化是可以在图片URL链接上增加不同特殊参数，服务器自动化生成。</li><li>不同格式、大小、质量的图片。</li></ul><h3 id="处理方式" tabindex="-1">处理方式 <a class="header-anchor" href="#处理方式" aria-label="Permalink to &quot;处理方式&quot;">​</a></h3><ul><li>图片裁剪:按长边、短边、填充、拉伸等缩放。</li><li>图片格式转换:支持JPG，GIF，PNG，WebP等，支持不同的图片压缩率。</li><li>图片处理:添加图片水印、高斯模糊、重心处理、裁剪边框等。</li><li>AI能力:鉴黄以及智能抠图、智能排版、智能配色、智能合成等AI功能。</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><ul><li><p>默认jpg <a href="https://m.360buyimg.com/test/s500x500_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.jpg" target="_blank" rel="noreferrer">https://m.360buyimg.com/test/s500x500_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.jpg</a></p></li><li><p>大小100*100的jpg <a href="https://m.360buyimg.com/test/s100x100_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.jpg" target="_blank" rel="noreferrer">https://m.360buyimg.com/test/s100x100_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.jpg</a></p></li><li><p>webp格式的图片 <a href="https://m.360buyimg.com/test/s500x500_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.webp" target="_blank" rel="noreferrer">https://m.360buyimg.com/test/s500x500_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.webp</a></p></li><li><p>质量压缩至10% <a href="https://m.360buyimg.com/test/s500x500_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.jpg!q10" target="_blank" rel="noreferrer">https://m.360buyimg.com/test/s500x500_jfs/t2362/199/2707005502/100242/616257ce/56e66b21N7b8c2be8.jpg!q10</a></p></li></ul>`,36)]))}const y=l(p,[["render",o]]);export{b as __pageData,y as default};
