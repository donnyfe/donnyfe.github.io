import{_ as a,c as n,o as l,ag as o}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"数组排序","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/array/数组排序.md","filePath":"jsPractice/array/数组排序.md"}'),p={name:"jsPractice/array/数组排序.md"};function e(t,s,r,c,y,i){return l(),n("div",null,s[0]||(s[0]=[o(`<h1 id="数组排序" tabindex="-1">数组排序 <a class="header-anchor" href="#数组排序" aria-label="Permalink to &quot;数组排序&quot;">​</a></h1><h2 id="数字数组排序" tabindex="-1">数字数组排序 <a class="header-anchor" href="#数字数组排序" aria-label="Permalink to &quot;数字数组排序&quot;">​</a></h2><h3 id="sort" tabindex="-1">.sort() <a class="header-anchor" href="#sort" aria-label="Permalink to &quot;.sort()&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 从小到大</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr</span><span style="color:#D73A49;">  =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">25</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">arr.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">((</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> b);</span></span>
<span class="line"><span style="color:#6A737D;">// 输出 [1, 5, 10, 25, 40, 100]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 从大到小</span></span>
<span class="line"><span style="color:#24292E;">arr.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">((</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> a);</span></span>
<span class="line"><span style="color:#6A737D;">// 输出 [100, 40, 25, 10, 5, 1]</span></span></code></pre></div><h2 id="字符串数组排序" tabindex="-1">字符串数组排序 <a class="header-anchor" href="#字符串数组排序" aria-label="Permalink to &quot;字符串数组排序&quot;">​</a></h2><h3 id="中文数组排序" tabindex="-1">中文数组排序 <a class="header-anchor" href="#中文数组排序" aria-label="Permalink to &quot;中文数组排序&quot;">​</a></h3><p>使用stringObject.localeCompare(target)实现中文按照拼音顺序排序</p><p>localeCompare() 方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;上海&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;北京&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;杭州&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;广东&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;深圳&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;西安&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> array.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">item2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> item1.</span><span style="color:#6F42C1;">localeCompare</span><span style="color:#24292E;">(item2));</span></span>
<span class="line"><span style="color:#6A737D;">// [&quot;北京&quot;, &quot;广东&quot;, &quot;杭州&quot;, &quot;上海&quot;, &quot;深圳&quot;, &quot;西安&quot;]</span></span></code></pre></div><h3 id="英文数组排序" tabindex="-1">英文数组排序 <a class="header-anchor" href="#英文数组排序" aria-label="Permalink to &quot;英文数组排序&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Joe&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Kapil&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Steve&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Musk&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">arr.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// [&quot;Joe&quot;, &quot;Kapil&quot;, &quot;Musk&quot;, &quot;Steve&quot;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">arr.</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// [&quot;Steve&quot;, &quot;Musk&quot;, &quot;Kapil&quot;, &quot;Joe&quot;]</span></span></code></pre></div><h2 id="对象数组排序" tabindex="-1">对象数组排序 <a class="header-anchor" href="#对象数组排序" aria-label="Permalink to &quot;对象数组排序&quot;">​</a></h2><h3 id="根据数值属性值排序" tabindex="-1">根据数值属性值排序 <a class="header-anchor" href="#根据数值属性值排序" aria-label="Permalink to &quot;根据数值属性值排序&quot;">​</a></h3><p>根据对象中的 <strong>数值属性值</strong> 排序</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 按照年龄age的顺序给person排序</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> age</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">33</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">55</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">66</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> person</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  { age: </span><span style="color:#005CC5;">55</span><span style="color:#24292E;">, weight: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { age: </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">, weight: </span><span style="color:#005CC5;">42</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { age: </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, weight: </span><span style="color:#005CC5;">15</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { age: </span><span style="color:#005CC5;">66</span><span style="color:#24292E;">, weight: </span><span style="color:#005CC5;">56</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  { age: </span><span style="color:#005CC5;">33</span><span style="color:#24292E;">, weight: </span><span style="color:#005CC5;">68</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> fnSort</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">propName</span><span style="color:#24292E;">, </span><span style="color:#E36209;">referArr</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  (</span><span style="color:#E36209;">prev</span><span style="color:#24292E;">, </span><span style="color:#E36209;">next</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> referArr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(prev[propName]) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> referArr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(next[propName]);</span></span>
<span class="line"><span style="color:#24292E;">person.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">fnSort</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">, age));</span></span>
<span class="line"><span style="color:#6A737D;">// [</span></span>
<span class="line"><span style="color:#6A737D;">//  {&quot;age&quot;: 33,&quot;weight&quot;: 68},</span></span>
<span class="line"><span style="color:#6A737D;">//  {&quot;age&quot;: 11,&quot;weight&quot;: 15},</span></span>
<span class="line"><span style="color:#6A737D;">//  {&quot;age&quot;: 55,&quot;weight&quot;: 50},</span></span>
<span class="line"><span style="color:#6A737D;">//  {&quot;age&quot;: 22,&quot;weight&quot;: 42},</span></span>
<span class="line"><span style="color:#6A737D;">//  {&quot;age&quot;: 66,&quot;weight&quot;: 56}</span></span>
<span class="line"><span style="color:#6A737D;">// ]</span></span></code></pre></div><h3 id="根据英文属性值排序" tabindex="-1">根据英文属性值排序 <a class="header-anchor" href="#根据英文属性值排序" aria-label="Permalink to &quot;根据英文属性值排序&quot;">​</a></h3><p>根据对象中 <strong>英文属性值</strong> 排序</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [ </span></span>
<span class="line"><span style="color:#24292E;">  { firstName: </span><span style="color:#032F62;">&#39;Lazslo&#39;</span><span style="color:#24292E;">, lastName: </span><span style="color:#032F62;">&#39;Jamf&#39;</span><span style="color:#24292E;">     },</span></span>
<span class="line"><span style="color:#24292E;">  { firstName: </span><span style="color:#032F62;">&#39;Pig&#39;</span><span style="color:#24292E;">,    lastName: </span><span style="color:#032F62;">&#39;Bodine&#39;</span><span style="color:#24292E;">   },</span></span>
<span class="line"><span style="color:#24292E;">  { firstName: </span><span style="color:#032F62;">&#39;Pirate&#39;</span><span style="color:#24292E;">, lastName: </span><span style="color:#032F62;">&#39;Prentice&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">arr.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">((</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> a.lastName.</span><span style="color:#6F42C1;">localeCompare</span><span style="color:#24292E;">(b.lastName));</span></span>
<span class="line"><span style="color:#6A737D;">// [ </span></span>
<span class="line"><span style="color:#6A737D;">//   { firstName: &#39;Pig&#39;,    lastName: &#39;Bodine&#39;   },</span></span>
<span class="line"><span style="color:#6A737D;">//   { firstName: &#39;Lazslo&#39;, lastName: &#39;Jamf&#39;     },</span></span>
<span class="line"><span style="color:#6A737D;">//   { firstName: &#39;Pirate&#39;, lastName: &#39;Prentice&#39; }</span></span>
<span class="line"><span style="color:#6A737D;">// ]</span></span></code></pre></div>`,18)]))}const C=a(p,[["render",e]]);export{u as __pageData,C as default};
