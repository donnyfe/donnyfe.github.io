import{_ as a,c as n,o as l,ag as p}from"./chunks/framework.DPDPlp3K.js";const C=JSON.parse('{"title":"数组求值","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/array/数组求值.md","filePath":"jsPractice/array/数组求值.md"}'),o={name:"jsPractice/array/数组求值.md"};function e(t,s,c,r,y,E){return l(),n("div",null,s[0]||(s[0]=[p(`<h1 id="数组求值" tabindex="-1">数组求值 <a class="header-anchor" href="#数组求值" aria-label="Permalink to &quot;数组求值&quot;">​</a></h1><h2 id="数组并集" tabindex="-1">数组并集 <a class="header-anchor" href="#数组并集" aria-label="Permalink to &quot;数组并集&quot;">​</a></h2><h2 id="数组补集" tabindex="-1">数组补集 <a class="header-anchor" href="#数组补集" aria-label="Permalink to &quot;数组补集&quot;">​</a></h2><h2 id="数组交集" tabindex="-1">数组交集 <a class="header-anchor" href="#数组交集" aria-label="Permalink to &quot;数组交集&quot;">​</a></h2><p><strong><code>deprecated</code></strong></p><p>缺陷：</p><ul><li>只适合原始类型判断</li><li>性能问题</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr1</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr2</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> intersectSet</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">...new</span><span style="color:#6F42C1;"> Set</span><span style="color:#24292E;">(arr1)].</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">item</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(item));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> result</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> intersectSet</span><span style="color:#24292E;">(arr1, arr2);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(result); </span><span style="color:#6A737D;">// [ 0, 2 ]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 性能测试</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;createData&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> data1</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> createData</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> data2</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> createData</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;createData&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;intersectSet&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">intersectSet</span><span style="color:#24292E;">(data1, data2);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;intersectSet&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> createData</span><span style="color:#24292E;">(</span><span style="color:#E36209;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">({ length }, (</span><span style="color:#E36209;">val</span><span style="color:#24292E;">, </span><span style="color:#E36209;">i</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#D73A49;"> ~~</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> length);</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 原始数据类型</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> intersectMap</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> map</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Map</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(val));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(val));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr3</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr4</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> result1</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> intersectMap</span><span style="color:#24292E;">(arr3, arr4);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;result1:&quot;</span><span style="color:#24292E;">, result1); </span><span style="color:#6A737D;">// result1: [ 2, 0 ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 性能测试</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;createData&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> data1</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> createData</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> data2</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> createData</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;createData&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">time</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;intersectMap&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">intersectMap</span><span style="color:#24292E;">(data1, data2);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">timeEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;intersectMap&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> createData</span><span style="color:#24292E;">(</span><span style="color:#E36209;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">({ length }, (</span><span style="color:#E36209;">val</span><span style="color:#24292E;">, </span><span style="color:#E36209;">i</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#D73A49;"> ~~</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> length);</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 引用类型</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> intersect</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> map</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Map</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(val[key]));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(val[key]));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr1</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [{ p: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr2</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [{ p: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> }];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> result</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> intersect</span><span style="color:#24292E;">(arr1, arr2, </span><span style="color:#032F62;">&quot;p&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;result:&quot;</span><span style="color:#24292E;">, result); </span><span style="color:#6A737D;">// result: [ { p: 2 }, { p: 1 } ]</span></span></code></pre></div><h2 id="数组差集" tabindex="-1">数组差集 <a class="header-anchor" href="#数组差集" aria-label="Permalink to &quot;数组差集&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 引用类型</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> difference</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> map</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Map</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(val[key]));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#D73A49;"> !</span><span style="color:#24292E;">map.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(val[key]));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 原始数据类型</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> differenceBase</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> map</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Map</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  arr1.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(val));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> arr2.</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#D73A49;"> !</span><span style="color:#24292E;">map.</span><span style="color:#6F42C1;">has</span><span style="color:#24292E;">(val));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr1</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [{ p: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr2</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [{ p: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }, { p: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> }];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> result</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> difference</span><span style="color:#24292E;">(arr1, arr2, </span><span style="color:#032F62;">&quot;p&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;result:&quot;</span><span style="color:#24292E;">, result); </span><span style="color:#6A737D;">// result: [ { p: 3 } ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr3</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> arr4</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> result1</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> differenceBase</span><span style="color:#24292E;">(arr3, arr4);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;result1:&quot;</span><span style="color:#24292E;">, result1); </span><span style="color:#6A737D;">// result1: [ 3 ]</span></span></code></pre></div>`,12)]))}const D=a(o,[["render",e]]);export{C as __pageData,D as default};
