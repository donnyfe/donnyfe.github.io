import{_ as a,c as n,o as l,ag as e}from"./chunks/framework.DPDPlp3K.js";const h=JSON.parse('{"title":"LESS 规范","description":"","frontmatter":{},"headers":[],"relativePath":"style/less/Less规范.md","filePath":"style/less/Less规范.md"}'),o={name:"style/less/Less规范.md"};function p(t,s,c,r,i,y){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="less-规范" tabindex="-1">LESS 规范 <a class="header-anchor" href="#less-规范" aria-label="Permalink to &quot;LESS 规范&quot;">​</a></h1><h2 id="代码组织" tabindex="-1">代码组织 <a class="header-anchor" href="#代码组织" aria-label="Permalink to &quot;代码组织&quot;">​</a></h2><h3 id="_1-将公共-less-文件放置在-style-less-common-文件夹" tabindex="-1">1) 将公共 less 文件放置在 style/less/common 文件夹 <a class="header-anchor" href="#_1-将公共-less-文件放置在-style-less-common-文件夹" aria-label="Permalink to &quot;1) 将公共 less 文件放置在 style/less/common 文件夹&quot;">​</a></h3><p>例: // color.less,common.less</p><h3 id="_2-按以下顺序组织" tabindex="-1">2) 按以下顺序组织 <a class="header-anchor" href="#_2-按以下顺序组织" aria-label="Permalink to &quot;2) 按以下顺序组织&quot;">​</a></h3><p>1、@import; 2、变量声明; 3、样式声明;</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">@import</span><span style="color:#032F62;"> &quot;mixins/size.less&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@default-text-color</span><span style="color:#24292E;">: #333;</span></span>
<span class="line"><span style="color:#6F42C1;">.page</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">  width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">960</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">  margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#005CC5;"> auto</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="避免嵌套层级过多" tabindex="-1">避免嵌套层级过多 <a class="header-anchor" href="#避免嵌套层级过多" aria-label="Permalink to &quot;避免嵌套层级过多&quot;">​</a></h2><p>将嵌套深度限制在 3 级。对于超过 4 级的嵌套，给予重新评估。这可以避免出现过于详实的 CSS 选择器。避免大量的嵌套规则。当可读性受到影响时，将之打断。推荐避免出现多于 20 行的嵌 套规则出现。</p><p>不推荐：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">.main</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   .</span><span style="color:#005CC5;">title</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">      color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#fff</span><span style="color:#24292E;">;  </span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>推荐：</strong></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">.main-title</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#fff</span><span style="color:#24292E;">; }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,13)]))}const C=a(o,[["render",p]]);export{h as __pageData,C as default};
