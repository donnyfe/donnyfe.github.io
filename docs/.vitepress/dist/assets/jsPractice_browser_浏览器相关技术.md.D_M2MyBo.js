import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.DPDPlp3K.js";const d=JSON.parse('{"title":"浏览器","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/browser/浏览器相关技术.md","filePath":"jsPractice/browser/浏览器相关技术.md"}'),o={name:"jsPractice/browser/浏览器相关技术.md"};function e(t,s,c,r,y,i){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="浏览器" tabindex="-1">浏览器 <a class="header-anchor" href="#浏览器" aria-label="Permalink to &quot;浏览器&quot;">​</a></h1><h2 id="检查当前选项卡是否在后台" tabindex="-1">检查当前选项卡是否在后台 <a class="header-anchor" href="#检查当前选项卡是否在后台" aria-label="Permalink to &quot;检查当前选项卡是否在后台&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> isTabActive</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#D73A49;"> !</span><span style="color:#24292E;">document.hidden;</span></span></code></pre></div><h2 id="监听页面刷新-卸载" tabindex="-1">监听页面刷新/卸载 <a class="header-anchor" href="#监听页面刷新-卸载" aria-label="Permalink to &quot;监听页面刷新/卸载&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">unload</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;unload&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">beforeunload</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;beforeunload&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;beforeunload&quot;</span><span style="color:#24292E;">, (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;"> e.</span><span style="color:#6F42C1;">preventDefault</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;"> e.returnValue </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;确定离开吗？&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(e));</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">removeEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;beforeunload&#39;</span><span style="color:#24292E;">, listener);</span></span></code></pre></div><h2 id="监听页面选项卡切换" tabindex="-1">监听页面选项卡切换 <a class="header-anchor" href="#监听页面选项卡切换" aria-label="Permalink to &quot;监听页面选项卡切换&quot;">​</a></h2><p>当其选项卡的内容变得可见或被隐藏时，会在文档上触发 visibilitychange (能见度更改)事件。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document/visibilitychange_event" target="_blank" rel="noreferrer">visibilitychange</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;visibilitychange&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;">(document.visibilityState </span><span style="color:#D73A49;">==</span><span style="color:#032F62;"> &#39;hidden&#39;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">      document.title </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;hidden&#39;</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (document.visibilityState </span><span style="color:#D73A49;">==</span><span style="color:#032F62;"> &#39;visible&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      document.title </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;visible&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="监听页面失焦时长" tabindex="-1">监听页面失焦时长 <a class="header-anchor" href="#监听页面失焦时长" aria-label="Permalink to &quot;监听页面失焦时长&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> isFirst </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> true</span><span style="color:#24292E;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">onfocus</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">isFirst) {</span></span>
<span class="line"><span style="color:#6F42C1;">    alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`您切屏了！共离开\${</span><span style="color:#24292E;">n</span><span style="color:#032F62;">}秒\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    isFirst </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    n </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  document.title </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;onfocus&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">onblur</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  isFirst </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">  setInterval</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    n</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="禁止网页复制黏贴" tabindex="-1">禁止网页复制黏贴 <a class="header-anchor" href="#禁止网页复制黏贴" aria-label="Permalink to &quot;禁止网页复制黏贴&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> html</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;html&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">html.</span><span style="color:#6F42C1;">oncopy</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#005CC5;"> false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">html.</span><span style="color:#6F42C1;">onpaste</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#005CC5;"> false</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 在复制时做些别的操作</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> html</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;html&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">html.</span><span style="color:#6F42C1;">oncopy</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">html.</span><span style="color:#6F42C1;">onpaste</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="动态设置-获取剪贴板内容" tabindex="-1">动态设置/获取剪贴板内容 <a class="header-anchor" href="#动态设置-获取剪贴板内容" aria-label="Permalink to &quot;动态设置/获取剪贴板内容&quot;">​</a></h2><p>使用场景：</p><ul><li>对于注册输入密码等需要输入两次相同内容的场景，应该是需要禁止粘贴的，这时候就可以禁止对应输入框的复制粘贴动作。</li><li>登陆才能复制。很多网站上的页面内容是不允许复制的，这样可以防止用户或者程序恶意的去抓取页面数据。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">//设置剪切板内容</span></span>
<span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;copy&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> clipboardData</span><span style="color:#D73A49;"> =</span></span>
<span class="line"><span style="color:#24292E;">    event.clipboardData </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> event.originalEvent?.clipboardData;</span></span>
<span class="line"><span style="color:#24292E;">  clipboardData?.</span><span style="color:#6F42C1;">setData</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;text/plain&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;不管复制什么，都是我！&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  event.</span><span style="color:#6F42C1;">preventDefault</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//获取剪切板的内容</span></span>
<span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;paste&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> clipboardData</span><span style="color:#D73A49;"> =</span></span>
<span class="line"><span style="color:#24292E;">    event.clipboardData </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> event.originalEvent?.clipboardData;</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> text</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> clipboardData?.</span><span style="color:#6F42C1;">getData</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(text);</span></span>
<span class="line"><span style="color:#24292E;">  event.</span><span style="color:#6F42C1;">preventDefault</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="获取浏览器定位" tabindex="-1">获取浏览器定位 <a class="header-anchor" href="#获取浏览器定位" aria-label="Permalink to &quot;获取浏览器定位&quot;">​</a></h2><p>注意：chrome浏览器使用定位功能需要科学上网</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> getPosition</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> options</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // 指示浏览器获取高精度的位置，默认为false</span></span>
<span class="line"><span style="color:#24292E;">    enableHightAcuracy: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    // 指定获取地理位置的超时时间，默认不限时，单位为毫秒</span></span>
<span class="line"><span style="color:#24292E;">    timeout: </span><span style="color:#005CC5;">5000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6A737D;">    // 最长有效期，在重复获取地理位置时，此参数指定多久再次获取位置。</span></span>
<span class="line"><span style="color:#24292E;">    maximunAge: </span><span style="color:#005CC5;">30000</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  navigator.geolocation.</span><span style="color:#6F42C1;">getCurrentPosition</span><span style="color:#24292E;">(showPosition, showError, options);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">  // 获取定位信息</span></span>
<span class="line"><span style="color:#D73A49;">  function</span><span style="color:#6F42C1;"> showPosition</span><span style="color:#24292E;">(</span><span style="color:#E36209;">pos</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;获取定位信息: &#39;</span><span style="color:#24292E;">, pos);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">coords</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pos;</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">longitude</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">latitude</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> coords;</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;定位地点是: &#39;</span><span style="color:#24292E;">, longitude, latitude);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">  // 异常</span></span>
<span class="line"><span style="color:#D73A49;">  function</span><span style="color:#6F42C1;"> showError</span><span style="color:#24292E;">(</span><span style="color:#E36209;">error</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    switch</span><span style="color:#24292E;"> (error.code) {</span></span>
<span class="line"><span style="color:#D73A49;">      case</span><span style="color:#24292E;"> error.</span><span style="color:#005CC5;">PERMISSION_DENIED</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6F42C1;">        alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;用户不允许地理定位!&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">        break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">      case</span><span style="color:#24292E;"> error.</span><span style="color:#005CC5;">POSITION_UNAVAILABLE</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6F42C1;">        alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;无法获取当前位置!&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">        break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">      case</span><span style="color:#24292E;"> error.</span><span style="color:#005CC5;">TIMEOUT</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6F42C1;">        alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;操作超时!&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">        break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">      case</span><span style="color:#24292E;"> error.</span><span style="color:#005CC5;">UNKNOWN_ERROR</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6F42C1;">        alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;未知错误！&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">        break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="检查网络状态" tabindex="-1">检查网络状态 <a class="header-anchor" href="#检查网络状态" aria-label="Permalink to &quot;检查网络状态&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> checkNetworkState</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">  var</span><span style="color:#24292E;"> networkState </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> navigator.network.connection.type;</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;networkState is: &quot;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> networkState);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (networkState </span><span style="color:#D73A49;">!==</span><span style="color:#005CC5;"> null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#6A737D;">   // do sth...</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6F42C1;">    alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Please check your network connection and try again.&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="获取浏览器信息" tabindex="-1">获取浏览器信息 <a class="header-anchor" href="#获取浏览器信息" aria-label="Permalink to &quot;获取浏览器信息&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 获取浏览器信息</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6F42C1;"> {browser}</span><span style="color:#6A737D;"> 浏览器信息的对象</span></span>
<span class="line"><span style="color:#6A737D;"> * appName:浏览器的正式名称,</span></span>
<span class="line"><span style="color:#6A737D;"> * appVersion:浏览器的版本号</span></span>
<span class="line"><span style="color:#6A737D;"> * cookieEnabled:浏览器是否启用了cookie,</span></span>
<span class="line"><span style="color:#6A737D;"> * cpuClass:返回用户计算机的cpu的型号，通常intel芯片返回&quot;x86&quot;（火狐没有）</span></span>
<span class="line"><span style="color:#6A737D;"> * mimeType:浏览器支持的所有MIME类型的数组</span></span>
<span class="line"><span style="color:#6A737D;"> * platform:浏览器正在运行的操作系统平台</span></span>
<span class="line"><span style="color:#6A737D;"> * plugins:安装在浏览器上的所有插件的数组</span></span>
<span class="line"><span style="color:#6A737D;"> * language:用户在自己的操作系统上设置的语言</span></span>
<span class="line"><span style="color:#6A737D;"> * userAgent:包含以下属性中所有或一部分的字符串：appCodeName,appName,appVersion,language,platform</span></span>
<span class="line"><span style="color:#6A737D;"> * systemLanguage:用户操作系统支持的默认语言（火狐没有）</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> getBrowserInfo</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    appName: navigator.appName,</span></span>
<span class="line"><span style="color:#24292E;">    vendor: navigator.vendor,</span></span>
<span class="line"><span style="color:#24292E;">    appVersion: navigator.appVersion,</span></span>
<span class="line"><span style="color:#24292E;">    cookieEnabled: navigator.cookieEnabled,</span></span>
<span class="line"><span style="color:#6A737D;">    // cpuClass: navigator.cpuClass,</span></span>
<span class="line"><span style="color:#6A737D;">    // mimeType　: navigator.mimeTypes,</span></span>
<span class="line"><span style="color:#24292E;">    platform: navigator.platform,</span></span>
<span class="line"><span style="color:#6A737D;">    // plugins: navigator.plugins,</span></span>
<span class="line"><span style="color:#24292E;">    language: navigator.language,</span></span>
<span class="line"><span style="color:#24292E;">    userAgent: navigator.userAgent,</span></span>
<span class="line"><span style="color:#24292E;">    systemLanguage: navigator.language</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="在浏览器当前页面打开并操作另一个-tab-页" tabindex="-1">在浏览器当前页面打开并操作另一个 tab 页 <a class="header-anchor" href="#在浏览器当前页面打开并操作另一个-tab-页" aria-label="Permalink to &quot;在浏览器当前页面打开并操作另一个 tab 页&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (window.customeWindow) {</span></span>
<span class="line"><span style="color:#24292E;">  window.customeWindow.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">window.customeWindow </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window.</span><span style="color:#6F42C1;">open</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">window.customeWindow.document.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&lt;p style=&quot;color:red&quot;&gt;写点什么呢？&lt;p&gt;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">window.customeWindow.document.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&lt;p style=&quot;color:#cccccc&quot;&gt;想写什么就写什么。&lt;p&gt;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">window.customeWindow.document.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;再追加点别的。&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">window.customeWindow.document.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;哈哈，现在页面上就只有我了！&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">window.customeWindow.document.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&lt;p style=&quot;color:red&quot;&gt;不，还有我！&lt;p&gt;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">window.customeWindow.document.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#6A737D;">// 连续追加输入结束</span></span></code></pre></div><h2 id="页面刷新检测资源更新" tabindex="-1">页面刷新检测资源更新 <a class="header-anchor" href="#页面刷新检测资源更新" aria-label="Permalink to &quot;页面刷新检测资源更新&quot;">​</a></h2><ul><li><a href="https://king-hcj.github.io/2020/12/11/upload-page/" target="_blank" rel="noreferrer">页面刷新检测资源更新</a></li></ul><h2 id="获取页面选中起始位置" tabindex="-1">获取页面选中起始位置 <a class="header-anchor" href="#获取页面选中起始位置" aria-label="Permalink to &quot;获取页面选中起始位置&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> function</span><span style="color:#6F42C1;"> getSelectionPosition</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#6A737D;">  // input, textarea, IE</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (element.setSelectionRange </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> element.createTextRange) {</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#24292E;"> [element.selectionStart, element.selectionEnd];</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // contenteditable</span></span>
<span class="line"><span style="color:#D73A49;">    try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#005CC5;"> selection</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> window.</span><span style="color:#6F42C1;">getSelection</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">      // Clone the Range otherwise setStart/setEnd will mutate the actual selection in Chrome 58+ and Firefox!</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#005CC5;"> range</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> selection.</span><span style="color:#6F42C1;">getRangeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">cloneRange</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">startContainer</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">startOffset</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> range;</span></span>
<span class="line"><span style="color:#24292E;">      range.</span><span style="color:#6F42C1;">setStart</span><span style="color:#24292E;">(element, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#005CC5;"> end</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> range.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      range.</span><span style="color:#6F42C1;">setEnd</span><span style="color:#24292E;">(startContainer, startOffset);</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#005CC5;"> start</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> range.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">      return</span><span style="color:#24292E;"> [start, end];</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (e) {</span></span>
<span class="line"><span style="color:#D73A49;">      return</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="设置页面选中起始位置" tabindex="-1">设置页面选中起始位置 <a class="header-anchor" href="#设置页面选中起始位置" aria-label="Permalink to &quot;设置页面选中起始位置&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> function</span><span style="color:#6F42C1;"> setSelectionPosition</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">, [</span><span style="color:#E36209;">start</span><span style="color:#24292E;">, </span><span style="color:#E36209;">end</span><span style="color:#24292E;">]) {</span></span>
<span class="line"><span style="color:#6A737D;">  // input, textarea</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (element.setSelectionRange) {</span></span>
<span class="line"><span style="color:#24292E;">    element.</span><span style="color:#6F42C1;">focus</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    element.</span><span style="color:#6F42C1;">setSelectionRange</span><span style="color:#24292E;">(start, end);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#D73A49;"> if</span><span style="color:#24292E;"> (element.createTextRange) {</span></span>
<span class="line"><span style="color:#6A737D;">    // IE</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> range</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> element.</span><span style="color:#6F42C1;">createTextRange</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    range.</span><span style="color:#6F42C1;">collapse</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    range.</span><span style="color:#6F42C1;">moveEnd</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;character&quot;</span><span style="color:#24292E;">, end);</span></span>
<span class="line"><span style="color:#24292E;">    range.</span><span style="color:#6F42C1;">moveStart</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;character&quot;</span><span style="color:#24292E;">, start);</span></span>
<span class="line"><span style="color:#24292E;">    range.</span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    // contenteditable</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> selection</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> window.</span><span style="color:#6F42C1;">getSelection</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> startPos</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> getTextNodeAtPosition</span><span style="color:#24292E;">(element, start);</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> endPos</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> getTextNodeAtPosition</span><span style="color:#24292E;">(element, end);</span></span>
<span class="line"><span style="color:#24292E;">    selection.</span><span style="color:#6F42C1;">removeAllRanges</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> range</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> new</span><span style="color:#6F42C1;"> Range</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    range.</span><span style="color:#6F42C1;">setStart</span><span style="color:#24292E;">(startPos.node, startPos.position);</span></span>
<span class="line"><span style="color:#24292E;">    range.</span><span style="color:#6F42C1;">setEnd</span><span style="color:#24292E;">(endPos.node, endPos.position);</span></span>
<span class="line"><span style="color:#24292E;">    selection.</span><span style="color:#6F42C1;">addRange</span><span style="color:#24292E;">(range);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#D73A49;"> function</span><span style="color:#6F42C1;"> saveSelection</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> range</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> getSelectionPosition</span><span style="color:#24292E;">(element);</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#6F42C1;"> setSelectionPosition</span><span style="color:#24292E;">(element, range);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="获取文本节点内容位置" tabindex="-1">获取文本节点内容位置 <a class="header-anchor" href="#获取文本节点内容位置" aria-label="Permalink to &quot;获取文本节点内容位置&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> getTextNodeAtPosition</span><span style="color:#24292E;">(</span><span style="color:#E36209;">root</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> treeWalker</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createTreeWalker</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    root,</span></span>
<span class="line"><span style="color:#24292E;">    NodeFilter.</span><span style="color:#005CC5;">SHOW_TEXT</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#E36209;">    elem</span><span style="color:#D73A49;"> =&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">      if</span><span style="color:#24292E;"> (index </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> elem.textContent.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        index </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> elem.textContent.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#24292E;"> NodeFilter.</span><span style="color:#005CC5;">FILTER_REJECT</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#D73A49;">      return</span><span style="color:#24292E;"> NodeFilter.</span><span style="color:#005CC5;">FILTER_ACCEPT</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> c</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> treeWalker.</span><span style="color:#6F42C1;">nextNode</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    node: c </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root,</span></span>
<span class="line"><span style="color:#24292E;">    position: c </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">:</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="检查设备类型" tabindex="-1">检查设备类型 <a class="header-anchor" href="#检查设备类型" aria-label="Permalink to &quot;检查设备类型&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#005CC5;"> checkDeviceType</span><span style="color:#D73A49;"> =</span></span>
<span class="line"><span style="color:#24292E;">      () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#032F62;"> /Android</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">webOS</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">iPhone</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">iPad</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">iPod</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">BlackBerry</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">IEMobile</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">OperaMini/</span><span style="color:#D73A49;">i</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(navigator.userAgent) </span><span style="color:#D73A49;">?</span><span style="color:#032F62;"> &#39;Mobile&#39;</span><span style="color:#D73A49;"> :</span><span style="color:#032F62;"> &#39;PC&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="文字复制到剪贴板" tabindex="-1">文字复制到剪贴板 <a class="header-anchor" href="#文字复制到剪贴板" aria-label="Permalink to &quot;文字复制到剪贴板&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> copyText</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">text</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#D73A49;"> await</span><span style="color:#24292E;"> navigator.clipboard.</span><span style="color:#6F42C1;">writeText</span><span style="color:#24292E;">(text)</span></span>
<span class="line"><span style="color:#6F42C1;">copyText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;单行代码 前端世界&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="获取选定的文本" tabindex="-1">获取选定的文本 <a class="header-anchor" href="#获取选定的文本" aria-label="Permalink to &quot;获取选定的文本&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> getSelectedText</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> window.</span><span style="color:#6F42C1;">getSelection</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">getSelectedText</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// 返回选中的内容</span></span></code></pre></div><h2 id="根据浏览器横屏改变fontsize" tabindex="-1">根据浏览器横屏改变fontSize <a class="header-anchor" href="#根据浏览器横屏改变fontsize" aria-label="Permalink to &quot;根据浏览器横屏改变fontSize&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">doc</span><span style="color:#24292E;">, </span><span style="color:#E36209;">win</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    var</span><span style="color:#24292E;"> docEl </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> doc.documentElement,</span></span>
<span class="line"><span style="color:#24292E;">        resizeEvt </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;orientationchange&#39;</span><span style="color:#D73A49;"> in</span><span style="color:#24292E;"> window </span><span style="color:#D73A49;">?</span><span style="color:#032F62;"> &#39;orientationchange&#39;</span><span style="color:#D73A49;"> :</span><span style="color:#032F62;"> &#39;resize&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6F42C1;">        recalc</span><span style="color:#D73A49;"> =</span><span style="color:#D73A49;"> function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">            var</span><span style="color:#24292E;"> clientWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> docEl.clientWidth;</span></span>
<span class="line"><span style="color:#D73A49;">            if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">clientWidth) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            docEl.style.fontSize </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 20</span><span style="color:#D73A49;"> *</span><span style="color:#24292E;"> (clientWidth </span><span style="color:#D73A49;">/</span><span style="color:#005CC5;"> 320</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39;px&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">doc.addEventListener) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    win.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(resizeEvt, recalc, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    doc.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;DOMContentLoaded&#39;</span><span style="color:#24292E;">, recalc, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">})(document, window);</span></span></code></pre></div>`,42)]))}const C=n(o,[["render",e]]);export{d as __pageData,C as default};
