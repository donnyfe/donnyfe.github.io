import{_ as e,c as l,o as i,ag as r}from"./chunks/framework.DPDPlp3K.js";const _=JSON.parse('{"title":"2.1 页面静态化","description":"","frontmatter":{},"headers":[],"relativePath":"performanceGeek/2.1页面静态化.md","filePath":"performanceGeek/2.1页面静态化.md"}'),t={name:"performanceGeek/2.1页面静态化.md"};function o(n,a,h,d,s,u){return i(),l("div",null,a[0]||(a[0]=[r('<h1 id="_2-1-页面静态化" tabindex="-1">2.1 页面静态化 <a class="header-anchor" href="#_2-1-页面静态化" aria-label="Permalink to &quot;2.1 页面静态化&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><ul><li>静态化是使动态化的网站生成静态HTML页面以供用户更好访问的技术，一般分为纯动态化和伪动态化。</li></ul><h2 id="技术优势" tabindex="-1">技术优势 <a class="header-anchor" href="#技术优势" aria-label="Permalink to &quot;技术优势&quot;">​</a></h2><ul><li>提高了页面访问速度，降低了服务器的负担，因为访问页面时不需要每次去访问数据库。</li><li>提高网站内容被搜索引擎搜索到的几率，因为搜索引擎更喜欢静态页面。</li><li>网站更稳定，如果后端程序、数据库出现问题，会直接影响网站的正常访问，而静态化页面有缓存，更不容易出现问题。</li></ul><h2 id="技术不足" tabindex="-1">技术不足 <a class="header-anchor" href="#技术不足" aria-label="Permalink to &quot;技术不足&quot;">​</a></h2><ul><li>服务器存储占用问题，因为页面量级在增加，要占用大用硬盘空间。</li><li>静态页面中的链接更新问题会有死链或者错误链接问题。</li></ul><h2 id="技术实现" tabindex="-1">技术实现 <a class="header-anchor" href="#技术实现" aria-label="Permalink to &quot;技术实现&quot;">​</a></h2><ul><li>跑定时任务，将已有的动态内容进行重定，生成静态的HTML页面。</li><li>利用模板技术，将模板引擎中模板字符替换为从数据库字段中取出来的值，同时生成 HTML文件。</li></ul><h2 id="协作方式" tabindex="-1">协作方式 <a class="header-anchor" href="#协作方式" aria-label="Permalink to &quot;协作方式&quot;">​</a></h2><ul><li>前端统一写好带有交互的完整静态页面。</li><li>后端拆分出静态页面文件，并嵌套在后端模板文件中。</li></ul><h2 id="选型建议" tabindex="-1">选型建议 <a class="header-anchor" href="#选型建议" aria-label="Permalink to &quot;选型建议&quot;">​</a></h2><ul><li>后端研发人员充分，又需要考虑用户体验、服务器负载的业务。</li></ul>',13)]))}const m=e(t,[["render",o]]);export{_ as __pageData,m as default};
