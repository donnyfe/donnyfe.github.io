import{_ as n,c as a,o as l,ag as p}from"./chunks/framework.DPDPlp3K.js";const i=JSON.parse('{"title":"颜色相关技术","description":"","frontmatter":{},"headers":[],"relativePath":"jsPractice/color/颜色相关技术.md","filePath":"jsPractice/color/颜色相关技术.md"}'),o={name:"jsPractice/color/颜色相关技术.md"};function e(t,s,c,r,y,C){return l(),a("div",null,s[0]||(s[0]=[p(`<h1 id="颜色相关技术" tabindex="-1">颜色相关技术 <a class="header-anchor" href="#颜色相关技术" aria-label="Permalink to &quot;颜色相关技术&quot;">​</a></h1><h2 id="_16进制颜色值转rgb" tabindex="-1">16进制颜色值转RGB <a class="header-anchor" href="#_16进制颜色值转rgb" aria-label="Permalink to &quot;16进制颜色值转RGB&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> hexToRGB</span><span style="color:#24292E;">(</span><span style="color:#E36209;">hex</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  hex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hex.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0x&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">  let</span><span style="color:#24292E;"> r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hex </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#005CC5;"> 16</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">  let</span><span style="color:#24292E;"> g </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (hex </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#005CC5;"> 8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&amp;</span><span style="color:#005CC5;"> 0xff</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">  let</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hex </span><span style="color:#D73A49;">&amp;</span><span style="color:#005CC5;"> 0xff</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#032F62;"> &#39;rgb(&#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> r </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39;,&#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> g </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39;,&#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &#39;)&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">hexToRGB</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#cccccc&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#6A737D;">// rgb(204,204,204)</span></span></code></pre></div><h2 id="rgb转16进制颜色值" tabindex="-1">RGB转16进制颜色值 <a class="header-anchor" href="#rgb转16进制颜色值" aria-label="Permalink to &quot;RGB转16进制颜色值&quot;">​</a></h2><p>示例1</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> RGBToHex</span><span style="color:#24292E;">(</span><span style="color:#E36209;">rgb</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  let</span><span style="color:#24292E;"> rgbArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rgb.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">[</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">\\d]</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">/</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">  let</span><span style="color:#24292E;"> color </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (rgbArr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;"> 16</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (rgbArr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;"> 8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> rgbArr[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#032F62;"> &#39;#&#39;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> color.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">RGBToHex</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;rgb(204,204,204)&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#6A737D;">// #cccccc</span></span></code></pre></div><p>示例2</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> rgbToHex</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">r</span><span style="color:#24292E;">, </span><span style="color:#E36209;">g</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#032F62;">  &quot;#&quot;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> ((</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;"> &lt;&lt;</span><span style="color:#005CC5;"> 24</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (r </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;"> 16</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (g </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;"> 8</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">rgbToHex</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">255</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">255</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#6A737D;">// #ffffff</span></span></code></pre></div><h2 id="求两个颜色之间的渐变值" tabindex="-1">求两个颜色之间的渐变值 <a class="header-anchor" href="#求两个颜色之间的渐变值" aria-label="Permalink to &quot;求两个颜色之间的渐变值&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 求两个颜色之间的渐变值</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {string}</span><span style="color:#24292E;"> startColor</span><span style="color:#6A737D;"> 开始的颜色</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {string}</span><span style="color:#24292E;"> endColor</span><span style="color:#6A737D;"> 结束的颜色</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6F42C1;"> {number}</span><span style="color:#24292E;"> step</span><span style="color:#6A737D;"> 颜色等分的份额</span></span>
<span class="line"><span style="color:#6A737D;"> * */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> colorGradient</span><span style="color:#24292E;">(</span><span style="color:#E36209;">startColor</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;rgb(0, 0, 0)&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">endColor</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> &#39;rgb(255, 255, 255)&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">step</span><span style="color:#D73A49;"> =</span><span style="color:#005CC5;"> 10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> startRGB</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> hexToRgb</span><span style="color:#24292E;">(startColor, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 转换为rgb数组模式</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> startR</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> startRGB[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> startG</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> startRGB[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> startB</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> startRGB[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> endRGB</span><span style="color:#D73A49;"> =</span><span style="color:#6F42C1;"> hexToRgb</span><span style="color:#24292E;">(endColor, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> endR</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> endRGB[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> endG</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> endRGB[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> endB</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> endRGB[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> sR</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (endR </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> startR) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> step </span><span style="color:#6A737D;">// 总差值</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> sG</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (endG </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> startG) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> step</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> sB</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> (endB </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> startB) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> step</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> colorArr</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">    for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> step; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#6A737D;">        // 计算每一步的hex值</span></span>
<span class="line"><span style="color:#D73A49;">        let</span><span style="color:#24292E;"> hex </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> rgbToHex</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`rgb(\${</span><span style="color:#24292E;">Math</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">round</span><span style="color:#032F62;">((</span><span style="color:#24292E;">sR</span><span style="color:#D73A49;"> *</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> startR</span><span style="color:#032F62;">))</span><span style="color:#032F62;">},\${</span><span style="color:#24292E;">Math</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">round</span><span style="color:#032F62;">((</span><span style="color:#24292E;">sG</span><span style="color:#D73A49;"> *</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> startG</span><span style="color:#032F62;">))</span><span style="color:#032F62;">},\${</span><span style="color:#24292E;">Math</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">round</span><span style="color:#032F62;">((</span><span style="color:#24292E;">sB</span></span>
<span class="line"><span style="color:#D73A49;">   *</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> startB</span><span style="color:#032F62;">))</span><span style="color:#032F62;">})\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">        // 确保第一个颜色值为startColor的值</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">===</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">) hex </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> rgbToHex</span><span style="color:#24292E;">(startColor)</span></span>
<span class="line"><span style="color:#6A737D;">        // 确保最后一个颜色值为endColor的值</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> step </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">) hex </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> rgbToHex</span><span style="color:#24292E;">(endColor)</span></span>
<span class="line"><span style="color:#24292E;">        colorArr.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(hex)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#24292E;"> colorArr</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 将hex表示方式转换为rgb表示方式(这里返回rgb数组模式)</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> hexToRgb</span><span style="color:#24292E;">(</span><span style="color:#E36209;">sColor</span><span style="color:#24292E;">, </span><span style="color:#E36209;">str</span><span style="color:#D73A49;"> =</span><span style="color:#005CC5;"> true</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">  const</span><span style="color:#005CC5;"> reg</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">#(</span><span style="color:#005CC5;">[0-9a-fA-f]</span><span style="color:#D73A49;">{3}|</span><span style="color:#005CC5;">[0-9a-fA-f]</span><span style="color:#D73A49;">{6}</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#24292E;">  sColor </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> String</span><span style="color:#24292E;">(sColor).</span><span style="color:#6F42C1;">toLowerCase</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">  if</span><span style="color:#24292E;"> (sColor </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(sColor)) {</span></span>
<span class="line"><span style="color:#D73A49;">      if</span><span style="color:#24292E;"> (sColor.</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> ===</span><span style="color:#005CC5;"> 4</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">          let</span><span style="color:#24292E;"> sColorNew </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;#&#39;</span></span>
<span class="line"><span style="color:#D73A49;">          for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 4</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">              sColorNew </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> sColor.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(i, i </span><span style="color:#D73A49;">+</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(sColor.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(i, i </span><span style="color:#D73A49;">+</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          sColor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sColorNew</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#6A737D;">      // 处理六位的颜色值</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#005CC5;"> sColorChange</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">      for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 7</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;"> 2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          sColorChange.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`0x\${</span><span style="color:#24292E;">sColor</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">slice</span><span style="color:#032F62;">(</span><span style="color:#24292E;">i</span><span style="color:#032F62;">, </span><span style="color:#24292E;">i</span><span style="color:#D73A49;"> +</span><span style="color:#005CC5;"> 2</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#D73A49;">      if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">str) {</span></span>
<span class="line"><span style="color:#D73A49;">          return</span><span style="color:#24292E;"> sColorChange</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#D73A49;">      return</span><span style="color:#032F62;"> \`rgb(\${</span><span style="color:#24292E;">sColorChange</span><span style="color:#032F62;">[</span><span style="color:#005CC5;">0</span><span style="color:#032F62;">]</span><span style="color:#032F62;">},\${</span><span style="color:#24292E;">sColorChange</span><span style="color:#032F62;">[</span><span style="color:#005CC5;">1</span><span style="color:#032F62;">]</span><span style="color:#032F62;">},\${</span><span style="color:#24292E;">sColorChange</span><span style="color:#032F62;">[</span><span style="color:#005CC5;">2</span><span style="color:#032F62;">]</span><span style="color:#032F62;">})\`</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">(rgb</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">RGB)/</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(sColor)) {</span></span>
<span class="line"><span style="color:#D73A49;">      const</span><span style="color:#005CC5;"> arr</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> sColor.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/(?:</span><span style="color:#22863A;font-weight:bold;">\\(</span><span style="color:#D73A49;">|</span><span style="color:#22863A;font-weight:bold;">\\)</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">rgb</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">RGB)</span><span style="color:#D73A49;">*</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">      return</span><span style="color:#24292E;"> arr.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#6F42C1;"> Number</span><span style="color:#24292E;">(val))</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#D73A49;">  return</span><span style="color:#24292E;"> sColor</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 将rgb表示方式转换为hex表示方式</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> rgbToHex</span><span style="color:#24292E;">(</span><span style="color:#E36209;">rgb</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> _this</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> rgb</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> reg</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">#(</span><span style="color:#005CC5;">[0-9a-fA-f]</span><span style="color:#D73A49;">{3}|</span><span style="color:#005CC5;">[0-9a-fA-f]</span><span style="color:#D73A49;">{6}</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">(rgb</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">RGB)/</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(_this)) {</span></span>
<span class="line"><span style="color:#D73A49;">        const</span><span style="color:#005CC5;"> aColor</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> _this.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/(?:</span><span style="color:#22863A;font-weight:bold;">\\(</span><span style="color:#D73A49;">|</span><span style="color:#22863A;font-weight:bold;">\\)</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">rgb</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">RGB)</span><span style="color:#D73A49;">*</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">        let</span><span style="color:#24292E;"> strHex </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;#&#39;</span></span>
<span class="line"><span style="color:#D73A49;">        for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> aColor.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">            let</span><span style="color:#24292E;"> hex </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> Number</span><span style="color:#24292E;">(aColor[i]).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            hex </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> String</span><span style="color:#24292E;">(hex).</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> ==</span><span style="color:#005CC5;"> 1</span><span style="color:#D73A49;"> ?</span><span style="color:#032F62;"> \`\${</span><span style="color:#005CC5;">0</span><span style="color:#032F62;">}\${</span><span style="color:#24292E;">hex</span><span style="color:#032F62;">}\`</span><span style="color:#D73A49;"> :</span><span style="color:#24292E;"> hex </span><span style="color:#6A737D;">// 保证每个rgb的值为2位</span></span>
<span class="line"><span style="color:#D73A49;">            if</span><span style="color:#24292E;"> (hex </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> &#39;0&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                hex </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> hex</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            strHex </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> hex</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> (strHex.</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> !==</span><span style="color:#005CC5;"> 7</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            strHex </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> _this</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#24292E;"> strHex</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(_this)) {</span></span>
<span class="line"><span style="color:#D73A49;">        const</span><span style="color:#005CC5;"> aNum</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> _this.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/#/</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> (aNum.</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> ===</span><span style="color:#005CC5;"> 6</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">            return</span><span style="color:#24292E;"> _this</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (aNum.</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> ===</span><span style="color:#005CC5;"> 3</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">            let</span><span style="color:#24292E;"> numHex </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;#&#39;</span></span>
<span class="line"><span style="color:#D73A49;">            for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> aNum.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                numHex </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> (aNum[i] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> aNum[i])</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#D73A49;">            return</span><span style="color:#24292E;"> numHex</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#24292E;"> _this</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">  * JS颜色十六进制转换为rgb或rgba,返回的格式为 rgba（255，255，255，0.5）字符串</span></span>
<span class="line"><span style="color:#6A737D;">  * sHex为传入的十六进制的色值</span></span>
<span class="line"><span style="color:#6A737D;">  * alpha为rgba的透明度</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#6F42C1;"> colorToRgba</span><span style="color:#24292E;">(</span><span style="color:#E36209;">color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">alpha</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    color </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> rgbToHex</span><span style="color:#24292E;">(color)</span></span>
<span class="line"><span style="color:#6A737D;">    // 十六进制颜色值的正则表达式</span></span>
<span class="line"><span style="color:#D73A49;">    const</span><span style="color:#005CC5;"> reg</span><span style="color:#D73A49;"> =</span><span style="color:#032F62;"> /</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">#(</span><span style="color:#005CC5;">[0-9a-fA-f]</span><span style="color:#D73A49;">{3}|</span><span style="color:#005CC5;">[0-9a-fA-f]</span><span style="color:#D73A49;">{6}</span><span style="color:#032F62;">)</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#6A737D;">    /* 16进制颜色转为RGB格式 */</span></span>
<span class="line"><span style="color:#D73A49;">    let</span><span style="color:#24292E;"> sColor </span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;"> String</span><span style="color:#24292E;">(color).</span><span style="color:#6F42C1;">toLowerCase</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">    if</span><span style="color:#24292E;"> (sColor </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> reg.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(sColor)) {</span></span>
<span class="line"><span style="color:#D73A49;">        if</span><span style="color:#24292E;"> (sColor.</span><span style="color:#005CC5;">length</span><span style="color:#D73A49;"> ===</span><span style="color:#005CC5;"> 4</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#D73A49;">            let</span><span style="color:#24292E;"> sColorNew </span><span style="color:#D73A49;">=</span><span style="color:#032F62;"> &#39;#&#39;</span></span>
<span class="line"><span style="color:#D73A49;">            for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 4</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                sColorNew </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> sColor.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(i, i </span><span style="color:#D73A49;">+</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(sColor.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(i, i </span><span style="color:#D73A49;">+</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            sColor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sColorNew</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#6A737D;">        // 处理六位的颜色值</span></span>
<span class="line"><span style="color:#D73A49;">        const</span><span style="color:#005CC5;"> sColorChange</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">        for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;"> 1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;"> 7</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;"> 2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            sColorChange.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`0x\${</span><span style="color:#24292E;">sColor</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">slice</span><span style="color:#032F62;">(</span><span style="color:#24292E;">i</span><span style="color:#032F62;">, </span><span style="color:#24292E;">i</span><span style="color:#D73A49;"> +</span><span style="color:#005CC5;"> 2</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#6A737D;">        // return sColorChange.join(&#39;,&#39;)</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#032F62;"> \`rgba(\${</span><span style="color:#24292E;">sColorChange</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">join</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">},\${</span><span style="color:#24292E;">alpha</span><span style="color:#032F62;">})\`</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">    return</span><span style="color:#24292E;"> sColor</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="生成随机十六进制颜色值" tabindex="-1">生成随机十六进制颜色值 <a class="header-anchor" href="#生成随机十六进制颜色值" aria-label="Permalink to &quot;生成随机十六进制颜色值&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#6F42C1;"> randomHexColor</span><span style="color:#D73A49;"> =</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#032F62;"> \`#\${</span><span style="color:#24292E;">Math</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">floor</span><span style="color:#032F62;">(</span><span style="color:#24292E;">Math</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">random</span><span style="color:#032F62;">() </span><span style="color:#D73A49;">*</span><span style="color:#005CC5;"> 0xffffff</span><span style="color:#032F62;">).</span><span style="color:#6F42C1;">toString</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">16</span><span style="color:#032F62;">).</span><span style="color:#6F42C1;">padEnd</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">6</span><span style="color:#032F62;">, </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">randomHexColor</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// #a2ce5b</span></span></code></pre></div>`,12)]))}const A=n(o,[["render",e]]);export{i as __pageData,A as default};
