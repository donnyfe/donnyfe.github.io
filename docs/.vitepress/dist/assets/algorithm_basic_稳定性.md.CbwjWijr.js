import{_ as i,c as l,o as e,ag as t}from"./chunks/framework.DPDPlp3K.js";const p=JSON.parse('{"title":"排序算法的稳定性","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/basic/稳定性.md","filePath":"algorithm/basic/稳定性.md"}'),r={name:"algorithm/basic/稳定性.md"};function o(s,a,n,_,c,d){return e(),l("div",null,a[0]||(a[0]=[t('<h1 id="排序算法的稳定性" tabindex="-1">排序算法的稳定性 <a class="header-anchor" href="#排序算法的稳定性" aria-label="Permalink to &quot;排序算法的稳定性&quot;">​</a></h1><p>算法稳定性指的是在一组待排序记录中，如果存在任意两个相等的记录R和S，且在待排序记录中R在S前，如果在排序后R依然在S前，即它们的前后位置在排序前后不发生改变，则称为排序算法为稳定的。</p><p>通俗地讲就是能保证排序前2个相等的数其在序列的前后位置顺序和排序后它们两个的前后位置顺序相同。</p><p><strong>常见排序算法的稳定性：</strong></p><h2 id="稳定" tabindex="-1">稳定 <a class="header-anchor" href="#稳定" aria-label="Permalink to &quot;稳定&quot;">​</a></h2><ul><li>基数排序</li><li>冒泡排序</li><li>直接插入排序</li><li>折半插入排序</li><li>归并排序</li></ul><h2 id="不稳定" tabindex="-1">不稳定 <a class="header-anchor" href="#不稳定" aria-label="Permalink to &quot;不稳定&quot;">​</a></h2><ul><li>堆排序</li><li>快速排序</li><li>希尔排序</li><li>直接选择排序</li></ul>',8)]))}const m=i(r,[["render",o]]);export{p as __pageData,m as default};
